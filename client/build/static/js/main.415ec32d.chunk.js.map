{"version":3,"sources":["assets/Background/bkg-private.svg","assets/Background/bkg-alt.jpg","assets/Forms/googleLogo.svg","assets/Tutorial/WelcomePage.png","assets/Tutorial/EditPage.gif","assets/Tutorial/AccountEditPage.gif","components/theme.js","helpers/auth.js","components/Routes/PrivateRoute.js","api/API.js","components/PrivatePages/ProfilePage/CharacterInfo/CharacterForm.js","components/PrivatePages/ProfilePage/CharacterInfo/CharacterDialog.js","components/PrivatePages/ProfilePage/CharacterInfo/CharacterCard.js","components/PrivatePages/ProfilePage/EducationInfo/Validation.js","components/PrivatePages/ProfilePage/EducationInfo/EducationForm.js","components/PrivatePages/ProfilePage/EducationInfo/EducationDialog.js","components/PrivatePages/ProfilePage/EducationInfo/EducationCard.js","components/PrivatePages/ProfilePage/ExperienceInfo/Validation.js","components/PrivatePages/ProfilePage/ExperienceInfo/ExperienceForm.js","components/PrivatePages/ProfilePage/ExperienceInfo/ExperienceDialog.js","components/PrivatePages/ProfilePage/ExperienceInfo/ExperienceCard.js","components/PrivatePages/ProfilePage/SkillsInfo/SkillsCard.js","components/PrivatePages/ProfilePage/ReflectionInfo/ReflectionForm.js","components/PrivatePages/ProfilePage/ReflectionInfo/ReflectionDialog.js","components/PrivatePages/ProfilePage/ReflectionInfo/ReflectionCard.js","components/PrivatePages/ProfilePage/ProjectInfo/ProjectForm.js","components/PrivatePages/ProfilePage/ProjectInfo/ProjectDialog.js","components/PrivatePages/ProfilePage/ProjectInfo/ProjectCard.js","components/PrivatePages/Tutorial/TutorialStepper.js","components/PrivatePages/Tutorial/Tutorial.js","components/PrivatePages/ProfilePage/AboutInfo/AboutForm.js","components/PrivatePages/ProfilePage/AboutInfo/AboutDialog.js","components/PrivatePages/ProfilePage/AboutInfo/AboutCard.js","components/PrivatePages/ProfilePage/ProfilePage.js","components/PublicPages/ProfilePage/CharacterInfo/PublicCharacterCard.js","components/PublicPages/ProfilePage/EducationInfo/PublicEducationCard.js","components/PublicPages/ProfilePage/ExperienceInfo/PublicExperienceCard.js","components/PublicPages/ProfilePage/SkillsInfo/PublicSkillsCard.js","components/PublicPages/ProfilePage/ReflectionInfo/PublicReflectionCard.js","components/PublicPages/ProfilePage/ProjectInfo/PublicProjectCard.js","components/PublicPages/ProfilePage/PublicProfilePage.js","components/utils/FormikField.js","components/PrivatePages/AccountPage/AccountInformationForm/Validation.js","components/PrivatePages/AccountPage/AccountInformationForm/AccountInformationForm.js","components/PrivatePages/AccountPage/PersonalInformationForm/Validation.js","components/PrivatePages/AccountPage/PersonalInformationForm/PersonalInformationForm.js","components/PrivatePages/AccountPage/ProfileSettingsForm/Validation.js","components/PrivatePages/AccountPage/ProfileSettingsForm/ProfileSettingsForm.js","components/PrivatePages/AccountPage/AccountPage.js","components/PrivatePages/PrivateLayout.js","components/PublicPages/PublicLayout.js","components/PublicPages/LoginPage/Validation.js","components/PublicPages/LoginPage/LoginPage.js","components/PublicPages/ResetPage/Validation.js","components/PublicPages/ResetPage/ResetPage.js","components/PublicPages/SignUpPage/Validation.js","components/PublicPages/SignUpPage/SignUpPage.js","components/PublicPages/LandingPage/LandingPage.js","components/PublicPages/SearchPage/SearchCard.js","components/PublicPages/SearchPage/SearchPage.js","components/PublicPages/HomeLayout.js","components/App.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","secondary","tertiary","neutral","text","typography","fontFamily","fontWeight","fontSize","h1","h2","h3","h4","overrides","MuiCssBaseline","body","overflowX","authenticate","response","key","value","window","cookie","set","expires","localStorage","setItem","JSON","stringify","setLocalStorage","isAuth","get","getCookie","getItem","logout","next","remove","removeItem","removeLocalStorage","PrivateRoute","Component","component","rest","render","props","to","axios","defaults","baseURL","location","origin","user","post","firstName","lastName","email","password","idToken","userID","accessToken","headers","Authorization","parse","edu_type","schoolName","unicourseName","monthStart","yearStart","monthEnd","yearEnd","graduated","recordId","put","unimajorName","recordID","delete","aboutMe","mobileNumber","birthDate","oldPassword","newPassword","type","organization","role","employeeStatus","description","userName","useStyles","makeStyles","form","flexGrow","padding","color","divider","width","backgroundColor","addButton","marginTop","spacing","buttonContainer","display","justifyContent","alignItems","addButtonContainer","ContentField","label","index","record","name","field","meta","TextField","variant","margin","fullWidth","multiline","rows","defaultValue","helperText","touched","error","onChange","onBlur","Boolean","CharacterForm","handleClose","records","classes","initialValues","reflections","onSubmit","values","actions","formikProps","handleSubmit","Divider","className","fieldArrayProps","Fragment","rowsMax","Button","button","onClick","Typography","disabled","isValid","container","position","paper","border","boxShadow","shadows","CharacterDialog","setRecords","React","useState","open","setOpen","API","then","data","IconButton","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","disableTypography","DialogContent","characterCard","background","light","profilePicture","height","cursor","bio","marginLeft","CharacterCard","Paper","accept","showUploadList","action","Avatar","validationSchema","yup","shape","schools","of","test","required","this","parent","schoolEntry","paddingLeft","periodInfo","marginBottom","graduatedButton","YEAR","Date","getFullYear","FormField","FormEduSelect","select","MenuItem","FormMonthSelect","milestone","MONTHS","map","month","i","FormYearSelect","years","Array","from","val","year","FormGraduatedCheckBox","FormControlLabel","control","Checkbox","checked","icon","checkedIcon","size","EducationForm","forEach","schoolRecord","_id","res","catch","err","console","log","setSubmitting","dividers","school","style","Grid","item","xs","sm","align","push","unimajorname","DialogActions","buttonWrapper","submit","isSubmitting","CircularProgress","buttonProgress","dialog","EducationDialog","scroll","Box","card","flexDirection","title","tableContainer","paddingRight","table","period","verticalAlign","education","1","2","3","4","5","6","7","8","9","10","11","12","EducationCard","isArray","length","Table","TableBody","edu","TableRow","TableCell","getRecord","experiences","expEntry","top","left","FormStatusSelect","ExperienceForm","expType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","expInfo","exp","panelContainer","subTitle","content","flex","borderColor","borderBottom","ExperienceDialog","string","charAt","toUpperCase","slice","workSection","addExperience","borderRadius","experience","organisation","ExperienceCard","employment","volunteering","extracurricular","skillsContainer","flexWrap","COLOURS","SkillsCard","skills","skill","Chip","Math","floor","random","getSkills","ReflectionForm","ReflectionDialog","upload","bottom","right","hidden","ReflectionCard","reflection","inputEl","loading","setLoading","ref","multiple","e","preventDefault","file","target","files","param","FormData","hasOwnProperty","append","method","url","responseType","result","message","info","click","ProjectForm","ProjectDialog","large","medium","small","ProjectCard","cardSize","project","allFiles","setAllFiles","allId","setAllId","handleChoseFile","status","id","fieldName","href","fileLink","root","stepper","pageContainer","alignContent","pageTitle","pageDescription","pageImage","alignSelf","TutorialStepper","activeStep","steps","step","alt","src","require","getTutorialPage","Stepper","labelProps","Step","StepLabel","tutorialButton","Transition","forwardRef","Slide","direction","Tutorial","setActiveStep","TransitionComponent","keepMounted","prevActiveStep","textAlign","AboutForm","onFinish","Item","TextArea","column","htmlType","AboutDialog","AboutCard","navSection","zIndex","navBar","navBarIcon","sectionContainer","section","minHeight","flexFlow","transition","ProfilePage","setSection","setUser","userEducation","setEducation","userExperience","setExperience","List","ListItem","ListItemIcon","ListItemText","PublicCharacterCard","PublicEducationCard","PublicExperienceCard","globalClasses","PublicSkillsCard","PublicReflectionCard","PublicProfilePage","match","userId","params","pageContent","FormikField","formikKey","errors","handleChange","handleBlur","emailValidationSchema","passwordValidationSchema","min","matches","confirmNewPassword","AccountInformationForm","emailSubmitted","setEmailSubmitted","emailFieldSubmitted","fieldSubmitted","passwordSubmitted","setPasswordSubmitted","passwordFieldSubmitted","formContainer","formTitle","setFieldError","PersonalInformationForm","Submitted","setSubmitted","undefined","substring","InputLabelProps","shrink","ProfileSettingsForm","AccountPage","isLoading","banner","mixins","toolbar","link","textDecoration","marginRight","bkgContainer","backgroundImage","Background","backgroundSize","backgroundRepeat","backgroundAttachment","overflowY","contentContainer","PrivateLayout","history","useHistory","AppBar","Toolbar","exact","path","PublicLayout","rememberMe","loginDivider","signupButton","googleButton","gitHubButton","buttonLogo","LoginPage","isLoggedIn","setLoggedIn","responseGoogle","tokenId","token","responseFacebook","formPaper","setErrors","inputField","Link","underline","clientId","process","onSuccess","onFailure","cookiePolicy","renderProps","startIcon","googleLogo","appId","autoLoad","callback","confirmPassword","ResetPage","successBoard","avatar","landingButton","SignUpPage","LandingPage","landingButtonContainer","searchCard","SearchCard","searchContainer","searchBar","iconButton","searchResults","SearchPage","InputProps","endAdornment","InputAdornment","aria-label","HomeLayout","Fade","App","ThemeProvider","CssBaseline","ReactDom","document","querySelector"],"mappings":"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","file":"static/js/main.415ec32d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bkg-private.72043118.svg\";","module.exports = __webpack_public_path__ + \"static/media/bkg-alt.5c918cda.jpg\";","module.exports = __webpack_public_path__ + \"static/media/googleLogo.8f343c26.svg\";","module.exports = __webpack_public_path__ + \"static/media/WelcomePage.bbfb3c11.png\";","module.exports = __webpack_public_path__ + \"static/media/EditPage.056bf09a.gif\";","module.exports = __webpack_public_path__ + \"static/media/AccountEditPage.4d227e0b.gif\";","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#0f2840' },\r\n    secondary: { main: '#648818' },\r\n    tertiary: { main: '#012611' },\r\n    neutral: { main: '#D9D7D7' },\r\n    text: { primary: '#000000', secondary: '#FFFFFF' },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Roboto',\r\n    fontWeight: 400,\r\n    fontSize: 12,\r\n    h1: {\r\n      fontSize: 40,\r\n    },\r\n    h2: {\r\n      fontSize: 30,\r\n    },\r\n    h3: {\r\n      fontSize: 20,\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n      fontSize: 16,\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        body: {\r\n          overflowX: 'hidden',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","import cookie from 'js-cookie';\r\n\r\n// import { GoogleLogout } from 'react-google-login';\r\n\r\nexport const setCookie = (key, value) => {\r\n  if (window !== 'undefined') {\r\n    cookie.set(key, value, {\r\n      // 1 Day\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = (key) => {\r\n  if (window !== 'undefined') {\r\n    cookie.remove(key, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n\r\n// Get from cookie such as stored token\r\n// Will be useful when we need to make request to server with token\r\nexport const getCookie = (key) => {\r\n  if (window !== 'undefined') {\r\n    return cookie.get(key);\r\n  }\r\n};\r\n\r\n// Set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (window !== 'undefined') {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n\r\n// Remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n  if (window !== 'undefined') {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n\r\n// Auth enticate user by passing data to cookie and localstorage during signin\r\nexport const authenticate = (response) => {\r\n  setCookie('token', response);\r\n  setLocalStorage('token', response);\r\n};\r\n\r\n// Access user info from localstorage\r\nexport const isAuth = () => {\r\n  if (window !== 'undefined') {\r\n    const cookieChecked = getCookie('token');\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem('token')) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = (next) => {\r\n  removeCookie('token');\r\n  removeLocalStorage('token');\r\n  next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n  console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\r\n  if (typeof window !== 'undefined') {\r\n    let auth = JSON.parse(localStorage.getItem('token'));\r\n    auth = response.data;\r\n    localStorage.setItem('token', JSON.stringify(auth));\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuth } from '../../helpers/auth';\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuth() ? <Component {...props} /> : <Redirect to='/home/login' />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = window.location.origin;\r\n\r\nexport default {\r\n  //userSignup\r\n  userSignup: function (user) {\r\n    return axios.post('/api/user/signup', {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n  },\r\n  userLogin: function (user) {\r\n    return axios.post('/api/user/login', {\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n  },\r\n\r\n  googleLogin: function (idToken) {\r\n    return axios.post(`api/user/googleLogin`, {\r\n      idToken: idToken,\r\n    });\r\n  },\r\n\r\n  facebookLogin: function (userID, accessToken) {\r\n    return axios.post('api/user/facebooklogin', {\r\n      userID,\r\n      accessToken,\r\n    });\r\n  },\r\n\r\n  /* ================ Authorised Calls ================ */\r\n  getUserInfo: () => {\r\n    return axios.get('/api/user/userInfo', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n\r\n  getUserProfile: () => {\r\n    return axios.get('/api/profile/', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n\r\n  getCV: function () {\r\n    return axios.get('/api/profile/cv', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  getProfilePic: function () {\r\n    return axios.get('/api/profile/profile-pic', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  getBio: function () {\r\n    return axios.get('/api/profile/bio', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets all education records\r\n  getEducation: function () {\r\n    return axios.get('/api/profile/education', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Creates an education record\r\n  postEducation: function (body) {\r\n    return axios.post(\r\n      '/api/profile/education',\r\n      {\r\n        edu_type: body.edu_type,\r\n        schoolName: body.schoolName,\r\n        unicourseName: body.unicourseName,\r\n        monthStart: body.monthStart,\r\n        yearStart: body.yearStart,\r\n        monthEnd: body.monthEnd,\r\n        yearEnd: body.yearEnd,\r\n        graduated: body.graduated,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // Updates a specific education record\r\n  updateEducation: function (body, recordId) {\r\n    return axios.put(\r\n      `/api/profile/education/${recordId}`,\r\n      {\r\n        edu_type: body.edu_type,\r\n        schoolName: body.schoolName,\r\n        unicourseName: body.unicourseName,\r\n        unimajorName: body.unimajorName,\r\n        monthStart: body.monthStart,\r\n        yearStart: body.yearStart,\r\n        monthEnd: body.monthEnd,\r\n        yearEnd: body.yearEnd,\r\n        graduated: body.graduated,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // Deletes a specific education record\r\n  deleteEducation: function (recordID) {\r\n    return axios.delete(`/api/profile/education/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Delete all user education records\r\n  clearEducation: function () {\r\n    return axios.delete('/api/profile/education', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets all of the user's uploaded files (except profile picture and cv)\r\n  getAllFiles: function () {\r\n    return axios.get('api/files/', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    }); // Gets an array of all Document objects that belong to the user\r\n  },\r\n\r\n  // So bio is supposed to come from the body, but idk how to attach it to this json\r\n  updateBio: function (body) {\r\n    return axios.put('/api/profile/bio', \r\n    {\r\n      biography: body.bio\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Single upload of file\r\n  uploadFile: function (body) {\r\n    return axios.post('/api/upload/file', {\r\n      file: body.file,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  uploadFiles: function (body) {\r\n    return axios.post('/api/upload/files', {\r\n      // The files key must be \"document\"\r\n      files: body.files, // This is an array of files (current limit: 5 files)\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  uploadCV: function (body) {\r\n    return axios.post('/api/upload/cv', {\r\n      // The file key must be \"cv\"\r\n      file: body.file, // This is a single file\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  deleteCV: function () {\r\n    return axios.delete('/api/files/cv', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  uploadProfilePic: function (body) {\r\n    return axios.post('/api/upload/profile-pic', {\r\n      // The file key is \"profile-pic\"\r\n      file: body.file,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  deleteProfilePic: function () {\r\n    return axios.delete('/api/files/profile-pic', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Single upload of image\r\n  uploadImage: function (body) {\r\n    return axios.post('/api/upload/image', {\r\n      file: body.file,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Multiple uploads of images\r\n  uploadImages: function (body) {\r\n    return axios.post('/api/upload/images', {\r\n      // The file key is \"image\"\r\n      files: body.files, // This is an array of images (current limit: 5 files)\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets a file based on its objectID\r\n  // getFile: function () {\r\n  //   return axios.get('/api/files/:id', {\r\n  //     headers: {\r\n  //       Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n  //     },\r\n  //   });\r\n  // },\r\n  // Downloads a file\r\n  downloadFile: function (recordID) {\r\n    return axios.get(`/api/files/download/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Displays an image based on the id in the params\r\n  displayImage: function (recordID) {\r\n    return axios.get(`/api/files/image/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Use this if the link doesn't work (Not sure if this will work)\r\n  // At the moment this only works for displaying the logged in user's profile picture\r\n  displayProfilePic: function () {\r\n    return axios.get('/api/files/image/profile-pic', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Deletes the file by objectID\r\n  deleteFile: function (recordID) {\r\n    return axios.delete(`/api/files/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Deletes multiple files\r\n  deleteFiles: function (body) {\r\n    return axios.delete('/api/files/delete', {\r\n      IDs: body.IDs,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Deletes all of the user's files (documents, images, profile picture and cv)\r\n  // Its probably best if this api is only used for deleting a profile\r\n  clearFiles: function () {\r\n    return axios.delete('/api/files', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets the user's skills array\r\n  getSkills: function () {\r\n    return axios.get('/api/profile/skills', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Add skills to the user's skills array (At the moment there is no limit on the number of skills)\r\n  addSkills: function (body) {\r\n    return axios.put('api/profile/skills', {\r\n      skills: body.skills,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Removes specified skills from the user's skills array\r\n  removeSkills: function (body) {\r\n    return axios.delete('api/profile/skills', {\r\n      skills: body.skills,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Creates a featured work\r\n  createFeaturedWork: function (body) {\r\n    return axios.post('api/profile/featured-work', {\r\n      title: body.title,\r\n      type: body.type,\r\n      description: body.description,\r\n      // attachedFile: {\r\n      //      documentID: \"5f10kjipmd\"\r\n      //      fileLink: \"http/:www.random.com/\"\r\n      //  }\r\n      attachedFile: body.attachedFile,\r\n      image: body.image,\r\n      url: body.url,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets all of the user's featured works\r\n  getAllFeaturedWorks: function () {\r\n    return axios.get('api/profile/featured-work', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets a specific featured work\r\n  getFeaturedWork: function (recordID) {\r\n    return axios.get(`api/profile/featured-work/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Edit a specific featured work\r\n  editFeaturedWork: function (body, recordID) {\r\n    return axios.put(`api/profile/featured-work/${recordID}`, {\r\n      title: body.title,\r\n      type: body.type,\r\n      description: body.description,\r\n      attachedFile: body.attachedFile,\r\n      image: body.image,\r\n      url: body.url,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Removes a specific featured work\r\n  removeFeaturedWork: function (recordID) {\r\n    return axios.delete(`api/profile/featured-work/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Removes all of the user's featured works\r\n  clearShowCase: function () {\r\n    return axios.delete('api/profile/featured-work', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets all of the user's blog posts\r\n  getAllBlogs: function () {\r\n    return axios.get('api/blog', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n\r\n  // Gets a specific blog post\r\n  getBlog: function (recordID) {\r\n    return axios.get(`api/blog/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Create a new blog post\r\n  createBlog: function (body) {\r\n    return axios.post('api/blog', {\r\n      title: body.title,\r\n      dateCreated: body.dateCreated,\r\n      content: body.content,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Edit a specific blog post\r\n  editBlog: function (body, recordID) {\r\n    return axios.put(`api/blog/${recordID}`, {\r\n      title: body.title,\r\n      dateCreated: body.dateCreated,\r\n      content: body.content,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Removes a specific blog\r\n  removeBlog: function (recordID) {\r\n    return axios.delete(`api/blog/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Removes all of the user's blogs\r\n  clearBlogs: function () {\r\n    return axios.delete('api/blog', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Get about me\r\n  getAboutMe: function () {\r\n    return axios.get('api/profile/aboutMe', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Edit about me\r\n  editAboutMe: function (body) {\r\n    return axios.put('api/profile/aboutMe', {\r\n      aboutMe: body.aboutMe,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Get user information\r\n  getUserInformation: function () {\r\n    return axios.get('api/user/userInfo', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Edit User information (name, mobile number, birthdate)\r\n  editUserInformation: function (body) {\r\n    return axios.put(\r\n      'api/user/userInfo',\r\n      {\r\n        firstName: body.firstName,\r\n        lastName: body.lastName,\r\n        mobileNumber: body.mobileNumber,\r\n        birthDate: body.birthDate,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // Updates a logged in user's email\r\n  updateEmail: function (body) {\r\n    return axios.put('api/user/update/email', {email: body.email}, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  changePassword: function (body) {\r\n    return axios.put('api/user/update/password', {oldPassword: body.oldPassword, newPassword: body.newPassword}, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  changeUserName: function (body) {\r\n    return axios.put('api/user/update/username', {\r\n      userName: body.userName\r\n    }, \r\n    {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Create an experience card\r\n  createExperience: function (body) {\r\n    return axios.post(\r\n      'api/experience',\r\n      {\r\n        type: body.type,\r\n        organization: body.organization,\r\n        role: body.role,\r\n        employeeStatus: body.employeeStatus,\r\n        yearStart: body.yearStart,\r\n        yearEnd: body.yearEnd,\r\n        monthStart: body.monthStart,\r\n        monthEnd: body.monthEnd,\r\n        description: body.description,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n      }\r\n    );\r\n  },\r\n  // Gets all of the user's experience (All types)\r\n  getAllExperience: function () {\r\n    return axios.get('api/experience', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets all of the viewed profile's experience\r\n  viewGetAllExperience: function (body) {\r\n    return axios.get('api/view/experience', {\r\n      userID: body.userID,\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets the user's employment history\r\n  getEmploymentHist: function () {\r\n    return axios.get('api/experience/employment', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Gets the user's volunteering history\r\n  getVolunteeringHist: function () {\r\n    return axios.get('api/experience/volunteering', {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Deletes an experience card\r\n  deleteExperience: function (recordID) {\r\n    return axios.delete(`api/experience/delete/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n  // Edits a specific experience\r\n  editExperience: function (body, recordID) {\r\n    return axios.put(\r\n      `api/experience/edit/${recordID}`,\r\n      {\r\n        type: body.type,\r\n        organization: body.organization,\r\n        role: body.role,\r\n        employeeStatus: body.employeeStatus,\r\n        yearStart: body.yearStart,\r\n        yearEnd: body.yearEnd,\r\n        monthStart: body.monthStart,\r\n        monthEnd: body.monthEnd,\r\n        description: body.description,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n      }\r\n    );\r\n  },\r\n\r\n  /* =========== Viewer =========== */\r\n  // Gets all the profile of the viewed person\r\n  viewerGetProfile: function (userName) {\r\n    return axios.get(`api/view/profile/${userName}`, {});\r\n  },\r\n\r\n  // Gets all the blogs of the viewed person\r\n  viewerGetAllBlogs: function (userName) {\r\n    return axios.get(`api/view/blog/${userName}`, {});\r\n  },\r\n\r\n  // Gets all the experience of the viewed person\r\n  viewerGetAllExperience: function (userName) {\r\n    return axios.get(`api/view/experience/${userName}`, {});\r\n  },\r\n\r\n  // Gets all the education of the viewed person\r\n  viewerGetEdu: function (userName) {\r\n    return axios.get(`api/view/education/${userName}`, {});\r\n  },\r\n\r\n  // Gets all the featured-works of the viewed person\r\n  viewerGetFeaturedWorks: function (userName) {\r\n    return axios.get(`api/view/featured-work/${userName}`, {});\r\n  },\r\n\r\n  // Gets all the documents of the viewed person\r\n  viewerGetAllDocs: function (userName) {\r\n    return axios.get(`api/view/files/${userName}`, {});\r\n  },\r\n\r\n  // Gets user information of the viewed person\r\n  viewerGetUserInformation: function (userName) {\r\n    return axios.get(`api/view/userInfo/${userName}`, {});\r\n  },\r\n\r\n  //Get a file based on its objectID\r\n  getFile: function (recordID) {\r\n    return axios.get(`/api/files/${recordID}`, {\r\n      headers: {\r\n        Authorization: 'Bearer:' + JSON.parse(localStorage.getItem('token')),\r\n      },\r\n    });\r\n  },\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, FieldArray, Formik } from 'formik';\r\nimport { Typography, Button, Divider, TextField } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    flexGrow: 1,\r\n    padding: '0 5% 0 5%',\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary, // or black\r\n    },\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  addButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  addButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst ContentField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`reflections[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\n//   const ContentField = ({ type, label, index, record })=>{\r\n//       return\r\n//   }\r\n\r\nconst CharacterForm = ({ handleClose, records }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        reflections: records,\r\n      }}\r\n      onSubmit={(values, actions) => {}}\r\n    >\r\n      {(formikProps) => (\r\n        <form classes={classes.form} onSubmit={formikProps.handleSubmit}>\r\n          <Divider className={classes.divider} />\r\n          <FieldArray\r\n            name='Bio'\r\n            render={(fieldArrayProps) => (\r\n              <React.Fragment>\r\n                <ContentField\r\n                  type={'Content'}\r\n                  rowsMax={4}\r\n                  // record={reflections.title}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n\r\n          <div className={classes.buttonContainer}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => handleClose()}\r\n              color='primary'\r\n            >\r\n              <Typography>Cancel</Typography>\r\n            </Button>\r\n            <Button\r\n              type='Submit'\r\n              className={classes.button}\r\n              disabled={!formikProps.isValid}\r\n              color='primary'\r\n            >\r\n              <Typography>Update</Typography>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default CharacterForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport API from '../../../../api/API';\r\nimport CharacterForm from './CharacterForm';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      position: 'relative',\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: '40%',\r\n      backgroundColor: theme.palette.neutral.main,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\n  const CharacterDialog = ({ records, setRecords }) => {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      API.getProfilePic().then(({ data }) => {\r\n        setRecords(data);\r\n        setOpen(false);\r\n      });\r\n    };\r\n  \r\n    return (\r\n      <div className={classes.container}>\r\n        <IconButton onClick={handleOpen}>\r\n          <EditIcon />\r\n        </IconButton>\r\n        <Dialog\r\n          fullWidth={true}\r\n          maxWidth={'md'}\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby='form-dialog-title'\r\n        >\r\n          <DialogTitle disableTypography>\r\n            <Typography variant='h2'>Edit Bio</Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <CharacterForm records={records} handleClose={handleClose} />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CharacterDialog;\r\n  ","import { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Typography } from '@material-ui/core';\r\nimport { Upload } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport CharacterDialog from './CharacterDialog';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  characterCard: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    background: theme.palette.primary.light,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  profilePicture: {\r\n    height: '5em',\r\n    width: '5em',\r\n    cursor: 'pointer',\r\n  },\r\n  bio: {\r\n    marginLeft: '5%',\r\n    flexGrow: 1,\r\n    color: 'white !important ',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\n\r\nconst CharacterCard = ({ user }) => {\r\n  const classes = useStyles();\r\n  const [records, setRecords] = useState(user);\r\n  // const {profileImg} = API.getProfilePic();\r\n  // console.log(profileImg[0]);\r\n\r\n  const getRecord = () => {\r\n    return <Typography> Add Bio </Typography>;\r\n  };\r\n\r\n  // const onBeforeFileLoad = (elem) => {\r\n  //   if(elem.target.files[0].size > 71680){\r\n  //     alert(\"File is too big!\");\r\n  //     elem.target.value = \"\";\r\n  //   };\r\n  // }\r\n\r\n  return (\r\n    <Paper className={classes.characterCard}>\r\n      <Upload\r\n        name='profile-pic'\r\n        accept='image/*'\r\n        showUploadList={false}\r\n        action='/api/upload/profile-pic'\r\n        headers={{\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        }}\r\n      >\r\n        <Avatar className={classes.profilePicture} />\r\n      </Upload>\r\n      <div className={classes.bio}>\r\n        <Typography variant='h2'>\r\n          {user.firstName} {user.lastName}\r\n        </Typography>\r\n        <Typography>{getRecord(records)}</Typography>\r\n        <Typography>{user.bio}</Typography>\r\n        <CharacterDialog records={records} setRecords={setRecords} />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  schools: yup.array().of(\r\n    yup.object().shape({\r\n      schoolName: yup\r\n        .string()\r\n        .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n          return /^[A-Za-z ]+$/.test(value);\r\n        })\r\n        .required('Required'),\r\n      unicourseName: yup\r\n        .string()\r\n        .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n          return /^[A-Za-z ]+$/.test(value);\r\n        }),\r\n      monthEnd: yup\r\n        .number()\r\n        .test('continuity', 'Invalid month', function (value) {\r\n          if (\r\n            this.parent.yearStart &&\r\n            this.parent.yearStart === this.parent.yearEnd\r\n          ) {\r\n            return this.parent.monthStart < value;\r\n          } else {\r\n            return true;\r\n          }\r\n        }),\r\n    })\r\n  ),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, FieldArray, Formik } from 'formik';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  TextField,\r\n  IconButton,\r\n  MenuItem,\r\n  Grid,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@material-ui/core';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport validationSchema from './Validation';\r\nimport API from '../../../../api/API';\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  schoolEntry: {\r\n    display: 'flex',\r\n    paddingLeft: '5%',\r\n  },\r\n  form: {\r\n    flexGrow: 1,\r\n    padding: '0 5% 0 5%',\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary, // or black\r\n    },\r\n  },\r\n  periodInfo: {\r\n    display: 'flex',\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.tertiary.main,\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n\r\n  addButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  addButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  graduatedButton: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\nvar YEAR = new Date().getFullYear();\r\n\r\n/* ================ Component ================ */\r\n\r\nconst FormField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`schools[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormEduSelect = ({ record, index }) => {\r\n  return (\r\n    <Field name={`schools[${index}].edu_type`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Education Type'\r\n            value={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          >\r\n            <MenuItem value={'Highschool'}>HighSchool</MenuItem>\r\n            <MenuItem value={'University'}>University</MenuItem>\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormMonthSelect = ({ record, index, milestone }) => {\r\n  const MONTHS = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  return (\r\n    <Field name={`schools[${index}].${milestone}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Month'\r\n            value={record}\r\n            helperText={meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            error={Boolean(meta.error)}\r\n          >\r\n            {MONTHS.map((month, i) => (\r\n              <MenuItem key={i} value={i + 1}>\r\n                {month}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormYearSelect = ({ record, index, milestone }) => {\r\n  var years = Array.from(new Array(20), (val, index) => YEAR - index);\r\n\r\n  if (milestone === 'yearEnd') {\r\n    const year = record.yearStart;\r\n    years = Array.from(new Array(20), (val, index) => year + index);\r\n  }\r\n\r\n  return (\r\n    <Field name={`schools[${index}].${milestone}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Year'\r\n            value={\r\n              milestone === 'yearStart' ? record.yearStart : record.yearEnd\r\n            }\r\n            onChange={field.onChange(field.name)}\r\n          >\r\n            {years.map((year, i) => (\r\n              <MenuItem key={i} value={year}>\r\n                {year}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormGraduatedCheckBox = ({ index }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Field name={`schools[${index}].graduated`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={field.value}\r\n                icon={<SchoolIcon color='disabled' />}\r\n                checkedIcon={<SchoolIcon color='secondary' />}\r\n                size='medium'\r\n                {...field}\r\n              />\r\n            }\r\n            label='Graduated'\r\n            className={classes.graduatedButton}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst EducationForm = ({ handleClose, records }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        schools: records,\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        values.schools.forEach((schoolRecord) => {\r\n          if (schoolRecord._id) {\r\n            //Update existing record\r\n            API.updateEducation(schoolRecord, schoolRecord._id)\r\n              .then((res) => {\r\n                handleClose();\r\n              })\r\n              .catch((err) => {\r\n                console.log(err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          } else {\r\n            //Create new record\r\n            API.postEducation(schoolRecord)\r\n              .then((res) => {\r\n                handleClose();\r\n              })\r\n              .catch((err) => {\r\n                console.log(err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }\r\n        });\r\n      }}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {(formikProps) => (\r\n        <React.Fragment>\r\n          <DialogContent dividers>\r\n            <form classes={classes.form} onSubmit={formikProps.handleSubmit}>\r\n              <FieldArray\r\n                name='schools'\r\n                render={(fieldArrayProps) => (\r\n                  <React.Fragment>\r\n                    {formikProps.values.schools.map((school, i) => (\r\n                      <React.Fragment key={i}>\r\n                        <div className={classes.schoolEntry}>\r\n                          <MenuBookIcon\r\n                            color='primary'\r\n                            style={{ fontSize: 40 }}\r\n                          />\r\n                          <div className={classes.form}>\r\n                            <FormEduSelect record={school.edu_type} index={i} />\r\n\r\n                            <FormField\r\n                              type={'schoolName'}\r\n                              label={'School Name'}\r\n                              index={i}\r\n                              record={school.schoolName}\r\n                            />\r\n                            {school.edu_type === 'University' ? (\r\n                              <FormField\r\n                                type={'unicourseName'}\r\n                                label={'Course Name'}\r\n                                index={i}\r\n                                record={school.unicourseName}\r\n                              />\r\n                            ) : (\r\n                              ''\r\n                            )}\r\n                            <div className={classes.periodInfo}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                  <Typography>From: </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormMonthSelect\r\n                                    record={school.monthStart}\r\n                                    index={i}\r\n                                    milestone={'monthStart'}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormYearSelect\r\n                                    record={school}\r\n                                    index={i}\r\n                                    milestone={'yearStart'}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                            <div className={classes.periodInfo}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                  <Typography>To: </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormMonthSelect\r\n                                    record={school.monthEnd}\r\n                                    index={i}\r\n                                    milestone={'monthEnd'}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormYearSelect\r\n                                    record={school}\r\n                                    index={i}\r\n                                    milestone={'yearEnd'}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                            <div className={classes.periodInfo}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={2} align='center'>\r\n                                  <FormGraduatedCheckBox index={i} />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                API.deleteEducation(school._id)\r\n                                  .then((res) => {\r\n                                    fieldArrayProps.remove(i);\r\n                                  })\r\n                                  .catch((err) => {\r\n                                    console.log(err.response.data);\r\n                                  });\r\n                              }}\r\n                            >\r\n                              <DeleteIcon style={{ fontSize: 30 }} />\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                        <Divider className={classes.divider} />\r\n                      </React.Fragment>\r\n                    ))}\r\n\r\n                    <div className={classes.addButtonContainer}>\r\n                      <IconButton\r\n                        className={classes.button}\r\n                        onClick={() =>\r\n                          fieldArrayProps.push({\r\n                            edu_type: '',\r\n                            schoolName: '',\r\n                            unicourseName: '',\r\n                            unimajorname: '',\r\n                            monthStart: 1,\r\n                            yearStart: YEAR,\r\n                            monthEnd: 12,\r\n                            yearEnd: YEAR,\r\n                            graduated: false,\r\n                          })\r\n                        }\r\n                        color='primary'\r\n                      >\r\n                        <AddBoxIcon style={{ fontSize: 30 }} />\r\n                      </IconButton>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => handleClose()}\r\n              color='primary'\r\n            >\r\n              <Typography>Cancel</Typography>\r\n            </Button>\r\n            <div className={classes.buttonWrapper}>\r\n              <Button\r\n                type='Submit'\r\n                className={classes.submit}\r\n                onClick={() => formikProps.handleSubmit()}\r\n                disabled={!formikProps.isValid || formikProps.isSubmitting}\r\n                color='primary'\r\n              >\r\n                <Typography>Update</Typography>\r\n              </Button>\r\n              {formikProps.isSubmitting && (\r\n                <CircularProgress\r\n                  size={24}\r\n                  className={classes.buttonProgress}\r\n                />\r\n              )}\r\n            </div>\r\n          </DialogActions>\r\n        </React.Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default EducationForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport EducationForm from './EducationForm';\r\nimport API from '../../../../api/API';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    position: 'relative',\r\n  },\r\n  dialog: {\r\n    '& .MuiDialogTitle-root': {\r\n      background: `linear-gradient(175deg, white 75%, ${theme.palette.secondary.main} 25%)`,\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      background: `linear-gradient(175deg, ${theme.palette.primary.main} 55%,  white 20%)`,\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: theme.palette.neutral.main,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst EducationDialog = ({ records, setRecords }) => {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    API.getEducation().then(({ data }) => {\r\n      setRecords(data);\r\n      setOpen(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <IconButton onClick={handleOpen}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'md'}\r\n        scroll={'paper'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.dialog}\r\n      >\r\n        <Box boxShadow={2}>\r\n          <DialogTitle disableTypography>\r\n            <Typography variant='h2'>Edit Education Information</Typography>\r\n          </DialogTitle>\r\n        </Box>\r\n        <EducationForm records={records} handleClose={handleClose} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EducationDialog;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Typography,\r\n  TableBody,\r\n} from '@material-ui/core';\r\nimport EducationDialog from './EducationDialog';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    // background: theme.palette.secondary.light,\r\n    // color: theme.palette.text.secondary,\r\n    padding: theme.spacing(5),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: { width: '100%' },\r\n  tableContainer: {\r\n    width: '90%',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  table: {\r\n    '& .MuiTableCell-body': {\r\n      // color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  period: {\r\n    width: '30%',\r\n    verticalAlign: 'top',\r\n  },\r\n  education: {\r\n    verticalAlign: 'top',\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst MONTHS = {\r\n  1: 'Jan',\r\n  2: 'Feb',\r\n  3: 'Mar',\r\n  4: 'Apr',\r\n  5: 'May',\r\n  6: 'Jun',\r\n  7: 'Jul',\r\n  8: 'Aug',\r\n  9: 'Sep',\r\n  10: 'Oct',\r\n  11: 'Nov',\r\n  12: 'Dec',\r\n};\r\n\r\n/* ================ Component ================ */\r\nconst EducationCard = ({ education }) => {\r\n  const classes = useStyles();\r\n\r\n  const [records, setRecords] = useState(education);\r\n\r\n  const getRecord = (education) => {\r\n    if (!(Array.isArray(education) && education.length)) {\r\n      return <Typography> Add your education!</Typography>;\r\n    } else {\r\n      return (\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {education.map((edu, i) => (\r\n              <TableRow key={i} className={classes.table}>\r\n                <TableCell className={classes.period}>\r\n                  <Typography>\r\n                    {MONTHS[edu.monthStart]}, {edu.yearStart} -\r\n                    {MONTHS[edu.monthEnd]}, {edu.yearEnd}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell className={classes.education}>\r\n                  <Typography variant='h4'>{edu.schoolName}</Typography>\r\n                  {edu.edu_type === 'University' ? (\r\n                    <Typography>\r\n                      {edu.unicourseName} {edu.unimajorName}\r\n                    </Typography>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <Typography className={classes.title} variant='h2'>\r\n        Education{' '}\r\n      </Typography>\r\n      <div className={classes.tableContainer}>{getRecord(records)}</div>\r\n      <EducationDialog records={records} setRecords={setRecords} />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default EducationCard;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  experiences: yup.array().of(\r\n    yup.object().shape({\r\n      monthEnd: yup\r\n        .number()\r\n        .test('continuity', 'Invalid month', function (value) {\r\n          if (\r\n            this.parent.yearStart &&\r\n            this.parent.yearStart === this.parent.yearEnd\r\n          ) {\r\n            return this.parent.monthStart < value;\r\n          } else {\r\n            return true;\r\n          }\r\n        }),\r\n    })\r\n  ),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, FieldArray, Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  TextField,\r\n  IconButton,\r\n  MenuItem,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport validationSchema from './Validation';\r\nimport API from '../../../../api/API';\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  expEntry: {\r\n    display: 'flex',\r\n    paddingLeft: '5%',\r\n  },\r\n  form: {\r\n    flexGrow: 1,\r\n    padding: '0 5% 0 5%',\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary, // or black\r\n    },\r\n  },\r\n  periodInfo: {\r\n    display: 'flex',\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.tertiary.main,\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n\r\n  addButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  addButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.secondary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\nvar YEAR = new Date().getFullYear();\r\n\r\n/* ================ Component ================ */\r\n\r\nconst FormField = ({ type, label, index, record, ...rest }) => {\r\n  return (\r\n    <Field name={`experiences[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n            {...rest}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormStatusSelect = ({ record, index }) => {\r\n  return (\r\n    <Field name={`experiences[${index}].employeeStatus`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Status'\r\n            value={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          >\r\n            <MenuItem value={'Full Time'}>Full Time</MenuItem>\r\n            <MenuItem value={'Part Time'}>Part Time</MenuItem>\r\n            <MenuItem value={'Casual'}>Casual</MenuItem>\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormMonthSelect = ({ record, index, milestone }) => {\r\n  const MONTHS = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  return (\r\n    <Field name={`experiences[${index}].${milestone}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Month'\r\n            value={record}\r\n            helperText={meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            error={Boolean(meta.error)}\r\n          >\r\n            {MONTHS.map((month, i) => (\r\n              <MenuItem key={i} value={i + 1}>\r\n                {month}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst FormYearSelect = ({ record, index, milestone }) => {\r\n  var years = Array.from(new Array(20), (val, index) => YEAR - index);\r\n\r\n  if (milestone === 'yearEnd') {\r\n    const year = record.yearStart;\r\n    years = Array.from(new Array(20), (val, index) => year + index);\r\n  }\r\n\r\n  return (\r\n    <Field name={`experiences[${index}].${milestone}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            variant='outlined'\r\n            margin='dense'\r\n            label='Year'\r\n            value={\r\n              milestone === 'yearStart' ? record.yearStart : record.yearEnd\r\n            }\r\n            onChange={field.onChange(field.name)}\r\n          >\r\n            {years.map((year, i) => (\r\n              <MenuItem key={i} value={year}>\r\n                {year}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst ExperienceForm = ({ handleClose, records, open, expType }) => {\r\n  const classes = useStyles();\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        experiences: records,\r\n      }}\r\n      onSubmit={(values, actions) => {\r\n        values.experiences.forEach((expInfo) => {\r\n          if (expInfo._id) {\r\n            //Update existing record\r\n            API.editExperience(expInfo, expInfo._id)\r\n              .then((res) => {\r\n                handleClose();\r\n              })\r\n              .catch((err) => {\r\n                actions.setSubmitting(false);\r\n              });\r\n          } else {\r\n            //Create new record\r\n            API.createExperience(expInfo)\r\n              .then((res) => {\r\n                handleClose();\r\n              })\r\n              .catch((err) => {\r\n                actions.setSubmitting(false);\r\n              });\r\n          }\r\n        });\r\n      }}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {(formikProps) => (\r\n        <React.Fragment>\r\n          <DialogContent dividers>\r\n            <form classes={classes.form} onSubmit={formikProps.handleSubmit}>\r\n              <FieldArray\r\n                name='experiences'\r\n                render={(fieldArrayProps) => (\r\n                  <React.Fragment>\r\n                    {formikProps.values.experiences.map((exp, i) => (\r\n                      <React.Fragment key={i}>\r\n                        <div className={classes.expEntry}>\r\n                          <WorkIcon color='primary' style={{ fontSize: 40 }} />\r\n                          <div className={classes.form}>\r\n                            <FormField\r\n                              type={'organization'}\r\n                              label={'Organization'}\r\n                              index={i}\r\n                              record={exp.organization}\r\n                              required\r\n                            />\r\n                            <FormField\r\n                              type={'role'}\r\n                              label={'Role'}\r\n                              index={i}\r\n                              record={exp.role}\r\n                              required\r\n                            />\r\n\r\n                            <div className={classes.periodInfo}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                  <Typography>From: </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormMonthSelect\r\n                                    record={exp.monthStart}\r\n                                    index={i}\r\n                                    milestone={'monthStart'}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormYearSelect\r\n                                    record={exp}\r\n                                    index={i}\r\n                                    milestone={'yearStart'}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                            <div className={classes.periodInfo}>\r\n                              <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={2}>\r\n                                  <Typography>To: </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormMonthSelect\r\n                                    record={exp.monthEnd}\r\n                                    index={i}\r\n                                    milestone={'monthEnd'}\r\n                                  />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={5}>\r\n                                  <FormYearSelect\r\n                                    record={exp}\r\n                                    index={i}\r\n                                    milestone={'yearEnd'}\r\n                                  />\r\n                                </Grid>\r\n                              </Grid>\r\n                            </div>\r\n                            <div className={classes.periodInfo}>\r\n                              <FormStatusSelect\r\n                                record={exp.employeeStatus}\r\n                                index={i}\r\n                              />\r\n                            </div>\r\n                            <FormField\r\n                              type={'description'}\r\n                              label={'Describe your experience'}\r\n                              index={i}\r\n                              record={exp.description}\r\n                              multiline\r\n                              rows={8}\r\n                            />\r\n                          </div>\r\n\r\n                          <div>\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                fieldArrayProps.remove(i);\r\n                                API.deleteExperience(exp._id).catch((err) => {\r\n                                  console.log(err.response.data);\r\n                                });\r\n                              }}\r\n                            >\r\n                              <DeleteIcon style={{ fontSize: 30 }} />\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                        <Divider className={classes.divider} />\r\n                      </React.Fragment>\r\n                    ))}\r\n\r\n                    <div className={classes.addButtonContainer}>\r\n                      <IconButton\r\n                        className={classes.button}\r\n                        onClick={() =>\r\n                          fieldArrayProps.push({\r\n                            type: expType,\r\n                            organization: '',\r\n                            role: '',\r\n                            employeeStatus: '',\r\n                            monthStart: 1,\r\n                            yearStart: YEAR,\r\n                            monthEnd: 12,\r\n                            yearEnd: YEAR,\r\n                            description: '',\r\n                          })\r\n                        }\r\n                        color='primary'\r\n                      >\r\n                        <AddBoxIcon style={{ fontSize: 30 }} />\r\n                      </IconButton>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <Box boxShadow={2}>\r\n            <DialogActions>\r\n              <Button className={classes.button} onClick={() => handleClose()}>\r\n                <Typography>Cancel</Typography>\r\n              </Button>\r\n              <div>\r\n                <Button\r\n                  type='Submit'\r\n                  className={classes.button}\r\n                  onClick={() => formikProps.handleSubmit()}\r\n                  disabled={!formikProps.isValid}\r\n                >\r\n                  <Typography>Update</Typography>\r\n                </Button>\r\n                {formikProps.isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={classes.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </DialogActions>\r\n          </Box>\r\n        </React.Fragment>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ExperienceForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport ExperienceForm from './ExperienceForm';\r\nimport API from '../../../../api/API';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    position: 'relative',\r\n  },\r\n  panelContainer: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: 224,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: theme.palette.neutral.main,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  dialog: {\r\n    '& .MuiDialogTitle-root': {\r\n      background: `linear-gradient(175deg, white 75%, ${theme.palette.secondary.main} 25%)`,\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      background: `linear-gradient(175deg, ${theme.palette.primary.main} 55%,  white 20%)`,\r\n    },\r\n  },\r\n  subTitle: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::after': {\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderColor: '#D9D7D7',\r\n      borderBottom: '1px solid',\r\n      margin: 'auto',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ExperienceDialog = ({ records, setRecords, type }) => {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    API.getAllExperience().then(({ data }) => {\r\n      console.log(data);\r\n      setRecords(data);\r\n      setOpen(false);\r\n    });\r\n  };\r\n\r\n  function capitaliseFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <IconButton onClick={handleOpen}>\r\n        <EditIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={'md'}\r\n        scroll={'paper'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        className={classes.dialog}\r\n      >\r\n        <Box boxShadow={2}>\r\n          <DialogTitle disableTypography>\r\n            <Typography variant='h2'>\r\n              Edit Your {capitaliseFirstLetter(type)} Experience\r\n            </Typography>\r\n          </DialogTitle>\r\n        </Box>\r\n\r\n        <ExperienceForm\r\n          records={records}\r\n          handleClose={handleClose}\r\n          open={open}\r\n          expType={type}\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceDialog;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Typography,\r\n  TableBody,\r\n} from '@material-ui/core';\r\nimport ExperienceDialog from './ExperienceDialog.js';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    // background: theme.palette.secondary.light,\r\n    // color: theme.palette.text.secondary,\r\n    padding: theme.spacing(5),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  workSection: {\r\n    margin: theme.spacing(2),\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n  title: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  subTitle: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::after': {\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderColor: '#D9D7D7',\r\n      borderBottom: '1px solid',\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  tableContainer: {\r\n    width: '90%',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  table: {\r\n    '& .MuiTable-root': {\r\n      // color: theme.palette.text.secondary,\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n    },\r\n  },\r\n  addExperience: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    background: theme.palette.neutral.light,\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n  period: {\r\n    width: '30%',\r\n    verticalAlign: 'top',\r\n  },\r\n  experience: {\r\n    verticalAlign: 'top',\r\n  },\r\n  organisation: {\r\n    width: '100%',\r\n  },\r\n  role: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  description: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst MONTHS = {\r\n  1: 'Jan',\r\n  2: 'Feb',\r\n  3: 'Mar',\r\n  4: 'Apr',\r\n  5: 'May',\r\n  6: 'Jun',\r\n  7: 'Jul',\r\n  8: 'Aug',\r\n  9: 'Sep',\r\n  10: 'Oct',\r\n  11: 'Nov',\r\n  12: 'Dec',\r\n};\r\n\r\n/* ================ Component ================ */\r\nconst ExperienceCard = ({ experience }) => {\r\n  const classes = useStyles();\r\n\r\n  const [records, setRecords] = useState(experience);\r\n\r\n  const getRecord = (experience) => {\r\n    if (!(Array.isArray(experience) && experience.length)) {\r\n      return (\r\n        <Typography variant='h3' className={classes.addExperience}>\r\n          {' '}\r\n          Display Your Experience here!\r\n        </Typography>\r\n      );\r\n    } else {\r\n      return (\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {experience.map((exp, i) => (\r\n              <TableRow key={i} className={classes.table}>\r\n                <TableCell className={classes.period}>\r\n                  <Typography>\r\n                    {MONTHS[exp.monthStart]}, {exp.yearStart} -\r\n                    {MONTHS[exp.monthEnd]}, {exp.yearEnd}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell className={classes.experience}>\r\n                  <Typography className={classes.organisation} variant='h3'>\r\n                    {exp.organization}\r\n                  </Typography>\r\n\r\n                  <Typography className={classes.role}>\r\n                    {exp.role} {`, ${exp.employeeStatus}`}\r\n                  </Typography>\r\n\r\n                  <Typography className={classes.description}>\r\n                    {exp.description}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <Typography className={classes.title} variant='h2'>\r\n        Experience{' '}\r\n      </Typography>\r\n      <div className={classes.workSection}>\r\n        <Typography className={classes.subTitle} variant='h3'>\r\n          Professional Work\r\n        </Typography>\r\n        <div className={classes.tableContainer}>\r\n          {getRecord(records.employment)}\r\n        </div>\r\n        <ExperienceDialog\r\n          type={'employment'}\r\n          records={records.employment}\r\n          setRecords={setRecords}\r\n        />\r\n      </div>\r\n      <div className={classes.workSection}>\r\n        <Typography className={classes.subTitle} variant='h3'>\r\n          Volunteer Work\r\n        </Typography>\r\n        <div className={classes.tableContainer}>\r\n          {getRecord(records.volunteering)}\r\n        </div>\r\n        <ExperienceDialog\r\n          type={'volunteering'}\r\n          records={records.volunteering}\r\n          setRecords={setRecords}\r\n        />\r\n      </div>\r\n      <div className={classes.workSection}>\r\n        <Typography className={classes.subTitle} variant='h3'>\r\n          Extracurricular Work\r\n        </Typography>\r\n        <div className={classes.tableContainer}>\r\n          {getRecord(records.extracurricular)}\r\n        </div>\r\n        <ExperienceDialog\r\n          type={'extracurricular'}\r\n          records={records.extracurricular}\r\n          setRecords={setRecords}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ExperienceCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Chip, Typography } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    height: '20%',\r\n    // background: theme.palette.primary.light,\r\n    // color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: { width: '100%' },\r\n\r\n  skillsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst COLOURS = ['primary', 'secondary'];\r\n\r\n/* ================ Component ================ */\r\nconst SkillsCard = ({ skills }) => {\r\n  const classes = useStyles();\r\n\r\n  const getSkills = (skills) => {\r\n    if (!(Array.isArray(skills) && skills.length)) {\r\n      return <Typography> Add Some of your skills!</Typography>;\r\n    } else {\r\n      return (\r\n        <div\r\n          className={classes.skillsContainer}\r\n          style={{ height: 10 * skills.length }}\r\n        >\r\n          {skills.map((skill, i) => (\r\n            <Chip\r\n              key={i}\r\n              label={skill}\r\n              color={COLOURS[Math.floor(Math.random() * COLOURS.length)]}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <Typography className={classes.title} variant='h2'>\r\n        What I'm Good At\r\n      </Typography>\r\n      {getSkills(skills)}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SkillsCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, FieldArray, Formik } from 'formik';\r\nimport { Typography, Button, Divider, TextField } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    flexGrow: 1,\r\n    padding: '0 5% 0 5%',\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary, // or black\r\n    },\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  addButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  addButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst FormField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`reflections[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst ContentField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`reflections[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\n//   const ContentField = ({ type, label, index, record })=>{\r\n//       return\r\n//   }\r\n\r\nconst ReflectionForm = ({ handleClose, records }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        reflections: records,\r\n      }}\r\n      onSubmit={(values, actions) => {}}\r\n    >\r\n      {(formikProps) => (\r\n        <form classes={classes.form} onSubmit={formikProps.handleSubmit}>\r\n          <Divider className={classes.divider} />\r\n          <FieldArray\r\n            name='reflections'\r\n            render={(fieldArrayProps) => (\r\n              <React.Fragment>\r\n                <Typography>Title</Typography>\r\n\r\n                <FormField\r\n                  type={'Title'}\r\n                  // record={reflections.title}\r\n                />\r\n\r\n                <Typography>Reflection</Typography>\r\n\r\n                <ContentField\r\n                  type={'Content'}\r\n                  rowsMax={4}\r\n                  // record={reflections.title}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n\r\n          <div className={classes.buttonContainer}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => handleClose()}\r\n              color='primary'\r\n            >\r\n              <Typography>Cancel</Typography>\r\n            </Button>\r\n            <Button\r\n              type='Submit'\r\n              className={classes.button}\r\n              disabled={!formikProps.isValid}\r\n              color='primary'\r\n            >\r\n              <Typography>Update</Typography>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ReflectionForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport ReflectionForm from './ReflectionForm';\r\nimport API from '../../../../api/API';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: '40%',\r\n    backgroundColor: theme.palette.neutral.main,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ReflectionDialog = ({ records, setRecords }) => {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      API.getAllBlogs().then(({ data }) => {\r\n        setRecords(data);\r\n        setOpen(false);\r\n      });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n          <IconButton onClick={handleOpen}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <Dialog\r\n            fullWidth={true}\r\n            maxWidth={'md'}\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby='form-dialog-title'\r\n          >\r\n            <DialogTitle disableTypography>\r\n              <Typography variant='h2'>Edit Reflection</Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <ReflectionForm records={records} handleClose={handleClose} />\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default ReflectionDialog;\r\n","import ReflectionDialog from './ReflectionDialog';\r\nimport React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    background: theme.palette.primary.light,\r\n    color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    position: 'relative',\r\n  },\r\n  description: {\r\n    marginLeft: '5%',\r\n    color: 'white !important ',\r\n  },\r\n  upload: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\nconst ReflectionCard = (reflection) => {\r\n  const classes = useStyles();\r\n\r\n  // const [records, setRecords] = useState(reflection);\r\n\r\n  const getRecord = () => {\r\n    return <Typography> Add your reflection!</Typography>;\r\n  };\r\n\r\n  // return (\r\n  //   <Paper className={classes.card}>\r\n  //     <div className={classes.bio}>\r\n  //       <Typography className={classes.title} variant='h2'>\r\n  //         This is a Reflection\r\n  //       </Typography>\r\n  //       <Typography>{getRecord(records)}</Typography>\r\n  //       {/* <div className={classes.tableContainer}>{getRecord(records)}</div> */}\r\n  //       <ReflectionDialog records={records} setRecords={setRecords} />\r\n  //     </div>\r\n  //   </Paper>\r\n  const inputEl = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [records, setRecords] = useState(reflection);\r\n\r\n  const handleChoseImg = (e) => {\r\n    e.preventDefault();\r\n    const file = e.target.files;\r\n    if (!file.length) {\r\n      return false;\r\n    }\r\n    if (file.length < 6) {\r\n      setLoading(true);\r\n      let param = new FormData();\r\n      for (const key in file) {\r\n        if (file.hasOwnProperty(key)) {\r\n          const item = file[key];\r\n          param.append('image', item);\r\n        }\r\n      }\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/upload/images',\r\n        data: param,\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n        responseType: 'blob',\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      message.info('the max number is 5');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <div className={classes.bio}>\r\n        <Typography className={classes.title} variant='h2'>\r\n          This is a Reflection\r\n        </Typography>\r\n        <Typography>This is the blog introduction</Typography>\r\n        <input\r\n          className={classes.hidden}\r\n          type='file'\r\n          ref={inputEl}\r\n          accept='image/*'\r\n          multiple\r\n          onChange={handleChoseImg}\r\n        />\r\n        {getRecord(records)}\r\n        {/* <div className={classes.tableContainer}>{getRecord(records)}</div> */}\r\n        <ReflectionDialog records={records} setRecords={setRecords} />\r\n        <div className={classes.upload}>\r\n          <Button loading={loading} onClick={() => inputEl.current.click()}>\r\n            Upload\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ReflectionCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Field, FieldArray, Formik } from 'formik';\r\nimport { Typography, Button, Divider, TextField } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    flexGrow: 1,\r\n    padding: '0 5% 0 5%',\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  addButton: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n  },\r\n  addButtonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst FormField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`projects[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\nconst ContentField = ({ type, label, index, record }) => {\r\n  return (\r\n    <Field name={`projects[${index}].${type}`}>\r\n      {({ field, meta }) => {\r\n        return (\r\n          <TextField\r\n            color='primary'\r\n            variant='outlined'\r\n            margin='dense'\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label={label}\r\n            defaultValue={record}\r\n            helperText={meta.touched && meta.error ? meta.error : ' '}\r\n            onChange={field.onChange(field.name)}\r\n            onBlur={field.onBlur(field.name)}\r\n            error={meta.touched && Boolean(meta.error)}\r\n          />\r\n        );\r\n      }}\r\n    </Field>\r\n  );\r\n};\r\n\r\n//   const ContentField = ({ type, label, index, record })=>{\r\n//       return\r\n//   }\r\n\r\nconst ProjectForm = ({ handleClose, records }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        reflections: records,\r\n      }}\r\n      onSubmit={(values, actions) => {}}\r\n    >\r\n      {(formikProps) => (\r\n        <form classes={classes.form} onSubmit={formikProps.handleSubmit}>\r\n          <Divider className={classes.divider} />\r\n          <FieldArray\r\n            name='projects'\r\n            render={(fieldArrayProps) => (\r\n              <React.Fragment>\r\n                <Typography>Title</Typography>\r\n\r\n                <FormField\r\n                  type={'Title'}\r\n                  // record={projects.title}\r\n                />\r\n\r\n                <Typography>Project</Typography>\r\n\r\n                <ContentField\r\n                  type={'Content'}\r\n                  rowsMax={4}\r\n                  // record={projects.title}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n\r\n          <div className={classes.buttonContainer}>\r\n            <Button\r\n              className={classes.button}\r\n              onClick={() => handleClose()}\r\n              color='primary'\r\n            >\r\n              <Typography>Cancel</Typography>\r\n            </Button>\r\n            <Button\r\n              type='Submit'\r\n              className={classes.button}\r\n              disabled={!formikProps.isValid}\r\n              color='primary'\r\n            >\r\n              <Typography>Update</Typography>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {\r\n    IconButton,\r\n    Typography,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle,\r\n} from '@material-ui/core';\r\nimport ProjectForm from './ProjectForm';\r\nimport API from '../../../../api/API';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '40%',\r\n        backgroundColor: theme.palette.neutral.main,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst ProjectDialog = ({ records, setRecords }) => {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        API.getAllBlogs().then(({ data }) => {\r\n            setRecords(data);\r\n            setOpen(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <IconButton onClick={handleOpen}>\r\n                <EditIcon />\r\n            </IconButton>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={'md'}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby='form-dialog-title'\r\n            >\r\n                <DialogTitle disableTypography>\r\n                    <Typography variant='h2'>Edit Project</Typography>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <ProjectForm records={records} handleClose={handleClose} />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectDialog;\r\n","import React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport { Button, message } from 'antd';\r\nimport axios from 'axios';\r\nimport API from '../../../../api/API';\r\nimport ProjectDialog from './ProjectDialog';\r\nimport FormatListBulletedIcon from '@material-ui/icons/List';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n/* ================ Styling ================ */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    background: theme.palette.primary.light,\r\n    color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    position: 'relative',\r\n  },\r\n  description: {\r\n    marginLeft: '5%',\r\n    color: 'white !important ',\r\n  },\r\n  large: {\r\n    background: theme.palette.secondary.light,\r\n    width: '100%',\r\n    height: '40%',\r\n  },\r\n  medium: {\r\n    width: '100%',\r\n    height: '30%',\r\n  },\r\n  small: {\r\n    width: '49%',\r\n    height: '30%',\r\n  },\r\n  upload: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\nconst ProjectCard = ({ type, project }) => {\r\n  const classes = useStyles();\r\n  const inputEl = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [allFiles, setAllFiles] = useState([]);\r\n  const [allId, setAllId] = useState([]);\r\n  //Default  card size is large\r\n  var cardSize;\r\n\r\n  switch (type) {\r\n    case 'large':\r\n      cardSize = classes.large;\r\n      break;\r\n    case 'medium':\r\n      cardSize = classes.medium;\r\n      break;\r\n    case 'small':\r\n      cardSize = classes.small;\r\n      break;\r\n    default:\r\n      cardSize = classes.large;\r\n  }\r\n\r\n  const handleChoseFile = (e) => {\r\n    e.preventDefault();\r\n    const file = e.target.files;\r\n    if (!file.length) {\r\n      return false;\r\n    }\r\n    if (file.length < 6) {\r\n      setLoading(true);\r\n      let param = new FormData();\r\n      for (const key in file) {\r\n        if (file.hasOwnProperty(key)) {\r\n          const item = file[key];\r\n          param.append('document', item);\r\n        }\r\n      }\r\n      axios({\r\n        method: 'post',\r\n        url: '/api/upload/files',\r\n        data: param,\r\n        headers: {\r\n          Authorization: 'Bearer: ' + JSON.parse(localStorage.getItem('token')),\r\n        },\r\n        responseType: 'blob',\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      message.info('the max number is 5');\r\n    }\r\n  };\r\n\r\n  const onFinish = () => {\r\n    API.getAllFiles().then((result) => {\r\n      if (result.status === 200) {\r\n        setAllFiles(result.data);\r\n      }\r\n    });\r\n  };\r\n  const onIdFinish = () => {\r\n    // test data\r\n    // ['url1','url2','url3','url4']\r\n    API.getAllFiles().then((result) => {\r\n      if (result.status === 200) {\r\n        setAllId(result.data);\r\n        console.log(123, allFiles);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getRecord = () => {\r\n    return <Typography> Add your project!</Typography>;\r\n  };\r\n\r\n  const [records, setRecords] = useState(project);\r\n\r\n  return (\r\n    <Paper className={`${classes.card}  ${cardSize}`}>\r\n      <div className={classes.bio}>\r\n        {type === 'small' && (\r\n          <>\r\n            <Typography className={classes.title} variant='h3'>\r\n              This is a small Project Card\r\n            </Typography>\r\n            <Typography>This is the project description</Typography>\r\n            <input\r\n              className={classes.hidden}\r\n              type='file'\r\n              ref={inputEl}\r\n              accept='.PDF,.png,.jpeg.JPEG,.pdf,.mp4,.MP4,.DOCX,.docx'\r\n              multiple\r\n              onChange={handleChoseFile}\r\n            />\r\n            {getRecord(records)}\r\n            {/* <div className={classes.tableContainer}>{getRecord(records)}</div> */}\r\n            <ProjectDialog records={records} setRecords={setRecords} />\r\n            <div className={classes.upload}>\r\n              <Button loading={loading} onClick={() => inputEl.current.click()}>\r\n                Upload\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {type === 'medium' && (\r\n          <>\r\n            <Typography className={classes.title} variant='h2'>\r\n              This is a medium Project Card\r\n            </Typography>\r\n            <Typography>This is the project description</Typography>\r\n            <input\r\n              className={classes.hidden}\r\n              type='file'\r\n              ref={inputEl}\r\n              accept='.PDF,.png,.jpeg.JPEG,.pdf,.mp4,.MP4,.DOCX,.docx'\r\n              multiple\r\n              onChange={handleChoseFile}\r\n            />\r\n            {getRecord(records)}\r\n            {/* <div className={classes.tableContainer}>{getRecord(records)}</div> */}\r\n            <ProjectDialog records={records} setRecords={setRecords} />\r\n            <div className={classes.upload}>\r\n              <Button loading={loading} onClick={() => inputEl.current.click()}>\r\n                Upload\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {type === 'large' && (\r\n          <>\r\n            <Typography className={classes.title} variant='h1'>\r\n              Showcase\r\n            </Typography>\r\n            <div style={{ marginTop: 5 }}>\r\n              <Typography variant='h4'>\r\n                {' '}\r\n                List uploaded files\r\n                <FormatListBulletedIcon onClick={() => onFinish()}>\r\n                  {' '}\r\n                </FormatListBulletedIcon>\r\n              </Typography>\r\n\r\n              <div>\r\n                {allFiles.map((item) => (\r\n                  <div key={item.id}>{item.fieldName}</div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div style={{ marginTop: 50 }}>\r\n              <Typography variant='h4'>\r\n                {' '}\r\n                Download files\r\n                <GetAppIcon onClick={() => onIdFinish()}>\r\n                  Download files\r\n                </GetAppIcon>\r\n              </Typography>\r\n\r\n              {allId &&\r\n                allId.map((item) => (\r\n                  <div key={item._id}>\r\n                    <a href={item.fileLink}>{item.fieldName}</a>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n  },\r\n  stepper: {\r\n    width: '100%',\r\n    '& .MuiStepLabel-label': {\r\n      color: '#9e9e9e',\r\n    },\r\n    '& .MuiStepLabel-active': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  pageContainer: {\r\n    height: '60vh',\r\n    width: '100%',\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignContent: 'center',\r\n  },\r\n  pageTitle: {\r\n    marginBottom: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  pageDescription: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  pageImage: {\r\n    width: '50%',\r\n    margin: theme.spacing(1),\r\n    alignSelf: 'center',\r\n  },\r\n}));\r\n\r\nconst TutorialStepper = ({ activeStep }) => {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  function getSteps() {\r\n    return [\r\n      'Welcome',\r\n      'Editing your Portfolio',\r\n      'Your Account',\r\n      'Viewing other profiles',\r\n      'Get Started',\r\n    ];\r\n  }\r\n\r\n  function getTutorialPage(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              Welcome to ePortfolio!\r\n            </Typography>\r\n            <div className={classes.pageDescription}>\r\n              <Typography>\r\n                Congratulations on creating your new portfolio, this tutorial\r\n                will provide you with a brief overview of the features of our\r\n                platform and how to make the most of your new portfolio.\r\n              </Typography>\r\n              <img\r\n                alt='Welcome-page'\r\n                className={classes.pageImage}\r\n                src={require('../../../assets/Tutorial/WelcomePage.png')}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case 1:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              Editing your Profile\r\n            </Typography>\r\n            <div className={classes.pageDescription}>\r\n              <Typography>\r\n                Get started with your portfolio by editing what is displayed.\r\n                <br />\r\n                <br />\r\n                You can display your experience, education, key skills, projects\r\n                and even write short reflections!\r\n                <br />\r\n                <br />\r\n                Click the <EditIcon /> next to the content you wish to edit.\r\n              </Typography>\r\n              <img\r\n                alt='Editing-Account-gif'\r\n                className={classes.pageImage}\r\n                src={require('../../../assets/Tutorial/EditPage.gif')}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case 2:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              Update your Account Details\r\n            </Typography>\r\n            <div className={classes.pageDescription}>\r\n              <Typography>\r\n                You can edit account information in the 'My Account' section\r\n                <br />\r\n                <br />\r\n                Here you can update your personal information, contact details\r\n                and information related to your ePortfolio account.\r\n                <br />\r\n                <br />\r\n                Upcoming features include editing your privacy settings.\r\n              </Typography>\r\n              <img\r\n                alt='Editing-PersonalInfo-gif'\r\n                className={classes.pageImage}\r\n                src={require('../../../assets/Tutorial/AccountEditPage.gif')}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case 3:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              View other User Profiles\r\n            </Typography>\r\n            <div className={classes.pageDescription}>\r\n              <Typography variant='h2'>Coming Soon..</Typography>\r\n              {/* <img\r\n                className={classes.pageImage}\r\n                src={require('../../../../assets/WelcomePage.png')}\r\n              /> */}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case 4:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              Get Started with your Profile now!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        return (\r\n          <React.Fragment>\r\n            <Typography variant='h1' className={classes.pageTitle}>\r\n              Get Started with your Profile now!\r\n            </Typography>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.pageContainer}>\r\n        {getTutorialPage(activeStep)}{' '}\r\n      </div>\r\n      <Stepper className={classes.stepper} activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialStepper;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Slide,\r\n} from '@material-ui/core';\r\n\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport TutorialStepper from './TutorialStepper';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  tutorialButton: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    fontSize: 40,\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nconst Tutorial = () => {\r\n  //Styling\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    if (activeStep < 4) {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (activeStep > 0) {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        className={classes.tutorialButton}\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <HelpIcon style={{ fontSize: 40 }} />\r\n      </IconButton>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth='md'\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n      >\r\n        <DialogContent>\r\n          <TutorialStepper activeStep={activeStep} />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={handleBack}\r\n            color='primary'\r\n            disabled={activeStep === 0}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <Button\r\n            onClick={handleNext}\r\n            color='primary'\r\n            disabled={activeStep === 4}\r\n          >\r\n            Next\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport API from \"../../../../api/API\";\r\n\r\n/* ================ Styling ================ */\r\n\r\n// Form Styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonContainer: {\r\n    textAlign: \"right\",\r\n  },\r\n  button: {\r\n    marginLeft: 8,\r\n  },\r\n}));\r\n\r\nconst AboutForm = ({ handleClose, records }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{\r\n        ...records,\r\n      }}\r\n      onFinish={(values) => {\r\n        console.log(values);\r\n        API.editAboutMe(values).then(({ data }) => {\r\n          handleClose();\r\n        });\r\n      }}\r\n    >\r\n      <Form.Item name=\"aboutMe\">\r\n        <Input.TextArea rows={4} column={16} />\r\n      </Form.Item>\r\n      <div className={classes.buttonContainer}>\r\n        <Button onClick={() => handleClose()}>Cancel</Button>\r\n        <Button htmlType=\"submit\" className={classes.button}>\r\n          Update\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AboutForm;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {\r\n  IconButton,\r\n  Typography,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../../../api/API\";\r\nimport AboutForm from \"./AboutForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    position: \"relative\",\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.7)\",\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"40%\",\r\n    backgroundColor: theme.palette.neutral.main,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst AboutDialog = ({ records, setRecords }) => {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    API.getAboutMe().then(({ data }) => {\r\n      setRecords({ aboutMe: data });\r\n      setOpen(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <IconButton onClick={handleOpen}>\r\n        <EditIcon className={classes.icon} />\r\n      </IconButton>\r\n      <Dialog\r\n        fullWidth={true}\r\n        maxWidth={\"md\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle disableTypography>\r\n          <Typography variant=\"h2\">Edit About</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <AboutForm records={records} handleClose={handleClose} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutDialog;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport API from \"../../../../api/API\";\r\nimport AboutDialog from \"./AboutDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  characterCard: {\r\n    margin: \"0 0 1% 1%\",\r\n    width: \"100%\",\r\n    background: theme.palette.primary.light,\r\n    padding: \"5%\",\r\n    height:\"20%\",\r\n  },\r\n  bio: {\r\n    marginLeft: \"5%\",\r\n    flexGrow: 1,\r\n    color: \"white !important \",\r\n  },\r\n}));\r\n\r\nconst AboutCard = () => {\r\n  const classes = useStyles();\r\n  const [records, setRecords] = useState({});\r\n\r\n  useEffect(() => {\r\n    API.getAboutMe()\r\n      .then(({ data }) => {\r\n        setRecords({ aboutMe: data });\r\n      })\r\n      .catch();\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className={classes.characterCard}>\r\n      <div className={classes.bio}>\r\n        <Typography style={{ color: \"#fff\" }} variant=\"h2\">\r\n          About Me\r\n        </Typography>\r\n        <Typography>Add About Me</Typography>\r\n        <Typography>{records.aboutMe}</Typography>\r\n        <AboutDialog records={records} setRecords={setRecords} />\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AboutCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport API from '../../../api/API';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CharacterCard from './CharacterInfo/CharacterCard';\r\nimport EducationCard from './EducationInfo/EducationCard';\r\nimport ExperienceCard from './ExperienceInfo/ExperienceCard';\r\nimport SkillsCard from './SkillsInfo/SkillsCard';\r\nimport ReflectionCard from './ReflectionInfo/ReflectionCard';\r\nimport ProjectCard from './ProjectInfo/ProjectCard';\r\nimport Tutorial from '../Tutorial/Tutorial';\r\nimport AboutCard from './AboutInfo/AboutCard';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    height: '90vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  navSection: {\r\n    position: 'fixed',\r\n    width: '25vw',\r\n    height: '100vh',\r\n    marginTop: '1%',\r\n    zIndex: '100',\r\n  },\r\n  container: {\r\n    maxWidth: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  navBar: {\r\n    marginLeft: '0.5em',\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  navBarIcon: {\r\n    fontSize: 30,\r\n    color: '#FFFFFF',\r\n  },\r\n\r\n  sectionContainer: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: '1%',\r\n  },\r\n  section: {\r\n    width: '100vw',\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    paddingLeft: '25vw',\r\n    paddingRight: '0.5em',\r\n    flexFlow: 'row wrap',\r\n    alignItems: 'stretch',\r\n    transition: 'all 700ms',\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst ProfilePage = () => {\r\n  // Styling\r\n  const classes = useStyles();\r\n  const [section, setSection] = useState(1);\r\n\r\n  //Profile Information\r\n  //!! NEED TO MANAGE ERROR MESSAGE AT SOME POINT\r\n  const [user, setUser] = useState(null);\r\n  const [userEducation, setEducation] = useState(null);\r\n  const [userExperience, setExperience] = useState(null);\r\n\r\n  //Load user data\r\n\r\n  useEffect(() => {\r\n    API.getUserProfile()\r\n      .then(({ data }) => {\r\n        setUser(data);\r\n      })\r\n      .catch();\r\n\r\n    API.getEducation()\r\n      .then(({ data }) => {\r\n        setEducation(data);\r\n      })\r\n      .catch();\r\n\r\n    API.getAllExperience()\r\n      .then(({ data }) => {\r\n        setExperience(data);\r\n      })\r\n      .catch();\r\n  }, []);\r\n\r\n  //If profile hasn't been fetched yet\r\n  var pageContent;\r\n  if (!(user && userEducation && userExperience)) {\r\n    pageContent = (\r\n      <div>\r\n        <div className={classes.loading}>\r\n          <CircularProgress />\r\n          <Typography variant='h2'>Fetching User Data</Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    pageContent = (\r\n      <div>\r\n        <div className={classes.container}>\r\n          <div className={classes.navSection}>\r\n            <Paper className={classes.navBar}>\r\n              <List>\r\n                <ListItem button onClick={() => setSection(1)}>\r\n                  <ListItemIcon>\r\n                    <FaceIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Profile'></ListItemText>\r\n                </ListItem>\r\n                <ListItem button onClick={() => setSection(2)}>\r\n                  <ListItemIcon>\r\n                    <CreateIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Reflections'></ListItemText>\r\n                </ListItem>\r\n                <ListItem button onClick={() => setSection(3)}>\r\n                  <ListItemIcon>\r\n                    <MenuBookIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Projects'></ListItemText>\r\n                </ListItem>\r\n                <ListItem button onClick={() => setSection(4)}>\r\n                  <ListItemIcon>\r\n                    <InfoIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='About'></ListItemText>\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n            <Tutorial />\r\n          </div>\r\n\r\n          <div className={classes.sectionContainer}>\r\n            <div\r\n              className={classes.section}\r\n              style={{ marginLeft: section * -100 + 'vw' }}\r\n            >\r\n              Placeholder section\r\n            </div>\r\n            <div className={classes.section}>\r\n              <CharacterCard user={user} />\r\n              <ExperienceCard experience={userExperience} />\r\n              <EducationCard education={userEducation} />\r\n              <SkillsCard skills={user.skills} />\r\n            </div>\r\n            <div className={classes.section}>\r\n              <ReflectionCard />\r\n              <ReflectionCard />\r\n              <ReflectionCard />\r\n            </div>\r\n            <div className={classes.section}>\r\n              <ProjectCard type={'large'} />\r\n              <ProjectCard type={'small'} />\r\n              <ProjectCard type={'small'} />\r\n              <ProjectCard type={'medium'} />\r\n            </div>\r\n            <div className={classes.section}>\r\n              <AboutCard />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return pageContent;\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Typography } from '@material-ui/core';\r\n\r\nimport React from 'react';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  characterCard: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    background: theme.palette.primary.light,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  profilePicture: {\r\n    height: '5em',\r\n    width: '5em',\r\n    cursor: 'pointer',\r\n  },\r\n  bio: {\r\n    marginLeft: '5%',\r\n    flexGrow: 1,\r\n    color: 'white !important ',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\n\r\nconst PublicCharacterCard = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.characterCard}>\r\n      <Avatar className={classes.profilePicture} />\r\n\r\n      <div className={classes.bio}>\r\n        <Typography variant='h2'>\r\n          {user.firstName} {user.lastName}\r\n        </Typography>\r\n        <Typography>{user.bio}</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PublicCharacterCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Typography,\r\n  TableBody,\r\n} from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    // background: theme.palette.secondary.light,\r\n    // color: theme.palette.text.secondary,\r\n    padding: theme.spacing(5),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: { width: '100%' },\r\n  tableContainer: {\r\n    width: '90%',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  table: {\r\n    '& .MuiTableCell-body': {\r\n      // color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  period: {\r\n    width: '30%',\r\n    verticalAlign: 'top',\r\n  },\r\n  education: {\r\n    verticalAlign: 'top',\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst MONTHS = {\r\n  1: 'Jan',\r\n  2: 'Feb',\r\n  3: 'Mar',\r\n  4: 'Apr',\r\n  5: 'May',\r\n  6: 'Jun',\r\n  7: 'Jul',\r\n  8: 'Aug',\r\n  9: 'Sep',\r\n  10: 'Oct',\r\n  11: 'Nov',\r\n  12: 'Dec',\r\n};\r\n\r\n/* ================ Component ================ */\r\nconst PublicEducationCard = ({ education }) => {\r\n  const classes = useStyles();\r\n\r\n  const getRecord = (education) => {\r\n    if (!(Array.isArray(education) && education.length)) {\r\n      return <Typography> Add your education!</Typography>;\r\n    } else {\r\n      return (\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            {education.map((edu, i) => (\r\n              <TableRow key={i} className={classes.table}>\r\n                <TableCell className={classes.period}>\r\n                  <Typography>\r\n                    {MONTHS[edu.monthStart]}, {edu.yearStart} -\r\n                    {MONTHS[edu.monthEnd]}, {edu.yearEnd}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell className={classes.education}>\r\n                  <Typography variant='h4'>{edu.schoolName}</Typography>\r\n                  {edu.edu_type === 'University' ? (\r\n                    <Typography>\r\n                      {edu.unicourseName} {edu.unimajorName}\r\n                    </Typography>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <Typography className={classes.title} variant='h2'>\r\n        Education{' '}\r\n      </Typography>\r\n      <div className={classes.tableContainer}>{getRecord(education)}</div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PublicEducationCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  Typography,\r\n  TableBody,\r\n} from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  workSection: {\r\n    margin: theme.spacing(2),\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n  },\r\n  subTitle: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::after': {\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderColor: '#D9D7D7',\r\n      borderBottom: '1px solid',\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  tableContainer: {\r\n    width: '90%',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  table: {\r\n    '& .MuiTable-root': {\r\n      // color: theme.palette.text.secondary,\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n    },\r\n  },\r\n  addExperience: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    background: theme.palette.neutral.light,\r\n    borderRadius: theme.spacing(2),\r\n  },\r\n  period: {\r\n    width: '30%',\r\n    verticalAlign: 'top',\r\n  },\r\n  experience: {\r\n    verticalAlign: 'top',\r\n  },\r\n  organisation: {\r\n    width: '100%',\r\n  },\r\n  role: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  description: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst MONTHS = {\r\n  1: 'Jan',\r\n  2: 'Feb',\r\n  3: 'Mar',\r\n  4: 'Apr',\r\n  5: 'May',\r\n  6: 'Jun',\r\n  7: 'Jul',\r\n  8: 'Aug',\r\n  9: 'Sep',\r\n  10: 'Oct',\r\n  11: 'Nov',\r\n  12: 'Dec',\r\n};\r\n\r\n/* ================ Component ================ */\r\nconst PublicExperienceCard = ({ experience, globalClasses }) => {\r\n  const classes = useStyles();\r\n\r\n  const getRecord = (experience) => {\r\n    return (\r\n      <Table className={classes.table}>\r\n        <TableBody>\r\n          {experience.map((exp, i) => (\r\n            <TableRow key={i} className={classes.table}>\r\n              <TableCell className={classes.period}>\r\n                <Typography>\r\n                  {MONTHS[exp.monthStart]}, {exp.yearStart} -\r\n                  {MONTHS[exp.monthEnd]}, {exp.yearEnd}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell className={classes.experience}>\r\n                <Typography className={classes.organisation} variant='h3'>\r\n                  {exp.organization}\r\n                </Typography>\r\n\r\n                <Typography className={classes.role}>\r\n                  {exp.role} {`, ${exp.employeeStatus}`}\r\n                </Typography>\r\n\r\n                <Typography className={classes.description}>\r\n                  {exp.description}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={globalClasses.card}>\r\n      <Typography className={globalClasses.title} variant='h2'>\r\n        Experience{' '}\r\n      </Typography>\r\n      {!(experience.employment.length === 0) && (\r\n        <div className={classes.workSection}>\r\n          <Typography className={classes.subTitle} variant='h3'>\r\n            Professional Work\r\n          </Typography>\r\n          <div className={classes.tableContainer}>\r\n            {getRecord(experience.employment)}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!(experience.volunteering.length === 0) && (\r\n        <div className={classes.workSection}>\r\n          <Typography className={classes.subTitle} variant='h3'>\r\n            Volunteer Work\r\n          </Typography>\r\n          <div className={classes.tableContainer}>\r\n            {getRecord(experience.volunteering)}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!(experience.extracurricular.length === 0) && (\r\n        <div className={classes.workSection}>\r\n          <Typography className={classes.subTitle} variant='h3'>\r\n            Extracurricular Work\r\n          </Typography>\r\n          <div className={classes.tableContainer}>\r\n            {getRecord(experience.extracurricular)}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PublicExperienceCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Chip, Typography } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    height: '20%',\r\n    // background: theme.palette.primary.light,\r\n    // color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: { width: '100%' },\r\n\r\n  skillsContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}));\r\n\r\n/* ================ Constants ================ */\r\n\r\nconst COLOURS = ['primary', 'secondary'];\r\n\r\n/* ================ Component ================ */\r\nconst PublicSkillsCard = ({ skills, globalClasses }) => {\r\n  const classes = useStyles();\r\n\r\n  const getSkills = (skills) => {\r\n    return (\r\n      <div\r\n        className={classes.skillsContainer}\r\n        style={{ height: 10 * skills.length }}\r\n      >\r\n        {skills.map((skill, i) => (\r\n          <Chip\r\n            key={i}\r\n            label={skill}\r\n            color={COLOURS[Math.floor(Math.random() * COLOURS.length)]}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={globalClasses.card}>\r\n      <Typography className={globalClasses.title} variant='h2'>\r\n        What I'm Good At\r\n      </Typography>\r\n      {getSkills(skills)}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PublicSkillsCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    background: theme.palette.primary.light,\r\n    color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    position: 'relative',\r\n  },\r\n  description: {\r\n    marginLeft: '5%',\r\n    color: 'white !important ',\r\n  },\r\n  upload: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\nconst PublicReflectionCard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.card}>\r\n      <div className={classes.bio}>\r\n        <Typography className={classes.title} variant='h2'>\r\n          This is a Reflection\r\n        </Typography>\r\n        <Typography>This is the blog introduction</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PublicReflectionCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    background: theme.palette.primary.light,\r\n    color: theme.palette.text.secondary,\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    position: 'relative',\r\n  },\r\n  description: {\r\n    marginLeft: '5%',\r\n    color: 'white !important ',\r\n  },\r\n  large: {\r\n    background: theme.palette.secondary.light,\r\n    width: '100%',\r\n    height: '60%',\r\n  },\r\n  medium: {\r\n    width: '100%',\r\n    height: '30%',\r\n  },\r\n  small: {\r\n    width: '49%',\r\n    height: '30%',\r\n  },\r\n  upload: {\r\n    position: 'absolute',\r\n    bottom: 10,\r\n    right: 10,\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\nconst ProjectCard = ({ type }) => {\r\n  const classes = useStyles();\r\n  // const inputEl = useRef(null);\r\n  // const [loading, setLoading] = useState(false);\r\n  // const [allFiles, setAllFiles] = useState([]);\r\n  // const [file, setFile] = useState('');\r\n  //Default  card size is large\r\n  var cardSize;\r\n\r\n  switch (type) {\r\n    case 'large':\r\n      cardSize = classes.large;\r\n      break;\r\n    case 'medium':\r\n      cardSize = classes.medium;\r\n      break;\r\n    case 'small':\r\n      cardSize = classes.small;\r\n      break;\r\n    default:\r\n      cardSize = classes.large;\r\n  }\r\n\r\n  return (\r\n    <Paper className={`${classes.card}  ${cardSize}`}>\r\n      <div className={classes.bio}>\r\n        <Typography className={classes.title} variant='h2'>\r\n          This is a {type} Project Card\r\n        </Typography>\r\n        <Typography>This is the project description</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport API from '../../../api/API';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport CharacterCard from './CharacterInfo/PublicCharacterCard';\r\nimport EducationCard from './EducationInfo/PublicEducationCard';\r\nimport ExperienceCard from './ExperienceInfo/PublicExperienceCard';\r\nimport SkillsCard from './SkillsInfo/PublicSkillsCard';\r\nimport ReflectionCard from './ReflectionInfo/PublicReflectionCard';\r\nimport ProjectCard from './ProjectInfo/PublicProjectCard';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    height: '90vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  navSection: {\r\n    position: 'fixed',\r\n    width: '25vw',\r\n    marginTop: '1%',\r\n    zIndex: '100',\r\n  },\r\n  container: {\r\n    maxWidth: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  navBar: {\r\n    marginLeft: '0.5em',\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  navBarIcon: {\r\n    fontSize: 30,\r\n    color: '#FFFFFF',\r\n  },\r\n  sectionContainer: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: '1%',\r\n  },\r\n  section: {\r\n    width: '100vw',\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    paddingLeft: '25vw',\r\n    paddingRight: '0.5em',\r\n    flexFlow: 'row wrap',\r\n    alignItems: 'stretch',\r\n    transition: 'all 700ms',\r\n  },\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n\r\n    padding: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: { width: '100%' },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst PublicProfilePage = ({ match, location }) => {\r\n  const {\r\n    params: { userId },\r\n  } = match;\r\n\r\n  // Styling\r\n  const classes = useStyles();\r\n  const [section, setSection] = useState(1);\r\n\r\n  //Profile Information\r\n  //!! NEED TO MANAGE ERROR MESSAGE AT SOME POINT\r\n  const [user, setUser] = useState(null);\r\n  const [userExperience, setExperience] = useState(null);\r\n\r\n  //Load user data\r\n\r\n  useEffect(() => {\r\n    API.viewerGetProfile(userId)\r\n      .then(({ data }) => {\r\n        setUser(data);\r\n        console.log(data);\r\n      })\r\n      .catch();\r\n\r\n    API.viewerGetAllExperience(userId)\r\n      .then(({ data }) => {\r\n        setExperience(data);\r\n      })\r\n      .catch();\r\n  });\r\n\r\n  const checkExperience = () => {\r\n    return (\r\n      userExperience.volunteering.length === 0 &&\r\n      userExperience.employment.length === 0 &&\r\n      userExperience.extracurricular.length === 0\r\n    );\r\n  };\r\n\r\n  const checkEducation = () => {\r\n    return user.education.length === 0;\r\n  };\r\n\r\n  const checkSkills = () => {\r\n    return user.skills.length === 0;\r\n  };\r\n\r\n  //If profile hasn't been fetched yet\r\n  var pageContent;\r\n  if (!(user && userExperience)) {\r\n    pageContent = (\r\n      <div>\r\n        <div className={classes.loading}>\r\n          <CircularProgress />\r\n          <Typography variant='h2'>Fetching this Portfolio</Typography>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    console.log(userExperience.volunteering.length === 0);\r\n    pageContent = (\r\n      <div>\r\n        <div className={classes.container}>\r\n          <div className={classes.navSection}>\r\n            <Paper className={classes.navBar}>\r\n              <List>\r\n                <ListItem button onClick={() => setSection(1)}>\r\n                  <ListItemIcon>\r\n                    <FaceIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Profile'></ListItemText>\r\n                </ListItem>\r\n                <ListItem button onClick={() => setSection(2)}>\r\n                  <ListItemIcon>\r\n                    <CreateIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Reflections'></ListItemText>\r\n                </ListItem>\r\n                <ListItem button onClick={() => setSection(3)}>\r\n                  <ListItemIcon>\r\n                    <MenuBookIcon className={classes.navBarIcon} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary='My Projects'></ListItemText>\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </div>\r\n\r\n          <div className={classes.sectionContainer}>\r\n            <div\r\n              className={classes.section}\r\n              style={{ marginLeft: section * -100 + 'vw' }}\r\n            >\r\n              Placeholder section\r\n            </div>\r\n            <div className={classes.section}>\r\n              <CharacterCard user={user} globalClasses={classes} />\r\n\r\n              {!checkExperience() && (\r\n                <ExperienceCard\r\n                  experience={userExperience}\r\n                  globalClasses={classes}\r\n                />\r\n              )}\r\n              {!checkEducation() && (\r\n                <EducationCard\r\n                  education={user.education}\r\n                  globalClasses={classes}\r\n                />\r\n              )}\r\n              {!checkSkills() && (\r\n                <SkillsCard skills={user.skills} globalClasses={classes} />\r\n              )}\r\n            </div>\r\n            <div className={classes.section}>\r\n              <ReflectionCard />\r\n              <ReflectionCard />\r\n              <ReflectionCard />\r\n            </div>\r\n            <div className={classes.section}>\r\n              <ProjectCard type={'large'} />\r\n              <ProjectCard type={'small'} />\r\n              <ProjectCard type={'small'} />\r\n              <ProjectCard type={'medium'} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return pageContent;\r\n};\r\n\r\nexport default PublicProfilePage;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\n/* ================ Components ================ */\r\n\r\nconst FormikField = ({ label, formikProps, formikKey, ...rest }) => {\r\n  return (\r\n    <TextField\r\n      variant='outlined'\r\n      margin='dense'\r\n      fullWidth\r\n      label={label}\r\n      helperText={\r\n        formikProps.touched[formikKey] && formikProps.errors[formikKey]\r\n          ? formikProps.errors[formikKey]\r\n          : ' '\r\n      }\r\n      onChange={formikProps.handleChange(formikKey)}\r\n      onBlur={formikProps.handleBlur(formikKey)}\r\n      error={\r\n        formikProps.touched[formikKey] && Boolean(formikProps.errors[formikKey])\r\n      }\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\nexport default FormikField;\r\n","import * as yup from 'yup';\r\n\r\nexport const emailValidationSchema = yup.object().shape({\r\n  email: yup.string().label('Email').email().required(),\r\n});\r\n\r\nexport const passwordValidationSchema = yup.object().shape({\r\n  newPassword: yup\r\n    .string()\r\n    .label('Password')\r\n    .required()\r\n    .min(5, 'Password should be a minimum of 5 characters')\r\n    .matches(\r\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      'Password must contain at least 8 characters, one uppercase, one number and one special case character'\r\n    ),\r\n  confirmNewPassword: yup\r\n    .string()\r\n    .required()\r\n    .label('Confirm password')\r\n    .test('passwords-match', 'Passwords do not match', function (value) {\r\n      return this.parent.newPassword === value;\r\n    }),\r\n});\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Paper, Typography, Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormikField from '../../../utils/FormikField';\r\nimport { emailValidationSchema, passwordValidationSchema } from './Validation';\r\nimport API from '../../../../api/API';\r\n\r\n/* ================ Component ================ */\r\n\r\nconst AccountInformationForm = ({ user, globalClasses }) => {\r\n  const [emailSubmitted, setEmailSubmitted] = useState(false);\r\n  const emailFieldSubmitted = emailSubmitted\r\n    ? globalClasses.fieldSubmitted\r\n    : '';\r\n\r\n  const [passwordSubmitted, setPasswordSubmitted] = useState(false);\r\n  const passwordFieldSubmitted = passwordSubmitted\r\n    ? globalClasses.fieldSubmitted\r\n    : '';\r\n\r\n  return (\r\n    <Paper className={globalClasses.card}>\r\n      <div className={globalClasses.title}>\r\n        <Typography variant='h2'>Account information</Typography>\r\n      </div>\r\n      <div className={globalClasses.formContainer}>\r\n        <Typography variant='h2' className={globalClasses.formTitle}>\r\n          Update your Email\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: user.email,\r\n          }}\r\n          onSubmit={(values, actions) => {\r\n            setEmailSubmitted(false);\r\n            API.updateEmail({\r\n              email: values.email,\r\n            })\r\n              .then((res) => {\r\n                setEmailSubmitted(true);\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                actions.setFieldError('email', err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }}\r\n          validationSchema={emailValidationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <form\r\n              className={globalClasses.form}\r\n              onSubmit={formikProps.handleSubmit}\r\n            >\r\n              <FormikField\r\n                label='Email'\r\n                formikProps={formikProps}\r\n                formikKey='email'\r\n                required\r\n                className={`${globalClasses.field} ${emailFieldSubmitted}`}\r\n                defaultValue={formikProps.initialValues.email}\r\n              />\r\n\r\n              <div className={globalClasses.buttonWrapper}>\r\n                <Button\r\n                  type='Submit'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\r\n                >\r\n                  <Typography>Update</Typography>\r\n                </Button>\r\n                {formikProps.isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={globalClasses.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n\r\n      <div className={globalClasses.formContainer}>\r\n        <Typography variant='h2' className={globalClasses.formTitle}>\r\n          Update your Password\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmNewPassword: '',\r\n          }}\r\n          onSubmit={(values, actions) => {\r\n            setPasswordSubmitted(false);\r\n\r\n            API.changePassword({\r\n              oldPassword: values.oldPassword,\r\n              newPassword: values.newPassword,\r\n            })\r\n              .then((res) => {\r\n                setPasswordSubmitted(true);\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                actions.setFieldError('oldPassword', err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }}\r\n          validationSchema={passwordValidationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <form\r\n              className={globalClasses.form}\r\n              onSubmit={formikProps.handleSubmit}\r\n            >\r\n              <FormikField\r\n                label='Current Password'\r\n                formikProps={formikProps}\r\n                formikKey='oldPassword'\r\n                type='password'\r\n                required\r\n                className={`${globalClasses.field} ${passwordFieldSubmitted}`}\r\n              />\r\n              <FormikField\r\n                label='Password'\r\n                formikProps={formikProps}\r\n                formikKey='newPassword'\r\n                type='password'\r\n                required\r\n                className={`${globalClasses.field} ${passwordFieldSubmitted}`}\r\n              />\r\n              <FormikField\r\n                label='Confirm Password'\r\n                formikProps={formikProps}\r\n                formikKey='confirmNewPassword'\r\n                type='password'\r\n                required\r\n                className={`${globalClasses.field} ${passwordFieldSubmitted}`}\r\n              />\r\n              <div className={globalClasses.buttonWrapper}>\r\n                <Button\r\n                  type='Submit'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\r\n                >\r\n                  <Typography>Update</Typography>\r\n                </Button>\r\n                {formikProps.isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={globalClasses.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AccountInformationForm;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required()\r\n    .label('First Name')\r\n    .test('length', 'First Name must have more than 1 character', (value) => {\r\n      return value && value.length > 2;\r\n    })\r\n    .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n      return /^[A-Za-z ]+$/.test(value);\r\n    }),\r\n  lastName: yup\r\n    .string()\r\n    .required()\r\n    .label('Last Name')\r\n    .test('length', 'Last Name must have more than 1 character', (value) => {\r\n      return value && value.length > 2;\r\n    })\r\n    .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n      return /^[A-Za-z ]+$/.test(value);\r\n    }),\r\n  mobileNumber: yup\r\n    .string()\r\n    .label('Mobile Number')\r\n    .test('valid', 'Phone Number is not valid', (value) => {\r\n      return /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/.test(\r\n        value\r\n      );\r\n    }),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Paper, Typography, Grid, Button } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormikField from '../../../utils/FormikField';\r\nimport validationSchema from './Validation';\r\nimport API from '../../../../api/API';\r\n\r\n/* ================ Component ================ */\r\n\r\nconst PersonalInformationForm = ({ user, globalClasses }) => {\r\n  const [Submitted, setSubmitted] = useState(false);\r\n  const fieldSubmitted = Submitted ? globalClasses.fieldSubmitted : '';\r\n\r\n  return (\r\n    <Paper className={globalClasses.card}>\r\n      <div className={globalClasses.title}>\r\n        <Typography variant='h2'>Personal information</Typography>\r\n      </div>\r\n      <div className={globalClasses.formContainer}>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            mobileNumber: user.mobileNumber,\r\n            birthDate: user.birthDate,\r\n          }}\r\n          onSubmit={(values, actions) => {\r\n            setSubmitted(false);\r\n            API.editUserInformation({\r\n              firstName: values.firstName,\r\n              lastName: values.lastName,\r\n              mobileNumber: values.mobileNumber,\r\n              birthDate: values.birthDate,\r\n            })\r\n              .then((res) => {\r\n                setSubmitted(true);\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                actions.setFieldError('mobileNumber', err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <form\r\n              className={globalClasses.form}\r\n              onSubmit={formikProps.handleSubmit}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikField\r\n                    label='FirstName'\r\n                    formikProps={formikProps}\r\n                    formikKey='firstName'\r\n                    required\r\n                    defaultValue={user.firstName}\r\n                    className={`${globalClasses.field} ${fieldSubmitted}`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <FormikField\r\n                    label='LastName'\r\n                    formikProps={formikProps}\r\n                    formikKey='lastName'\r\n                    required\r\n                    defaultValue={user.lastName}\r\n                    className={`${globalClasses.field} ${fieldSubmitted}`}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <FormikField\r\n                label='Mobile Number'\r\n                formikProps={formikProps}\r\n                formikKey='mobileNumber'\r\n                required\r\n                defaultValue={user.mobileNumber}\r\n                className={`${globalClasses.field} ${fieldSubmitted}`}\r\n              />\r\n\r\n              <FormikField\r\n                label='Date of Birth'\r\n                formikProps={formikProps}\r\n                formikKey='birthDate'\r\n                type='date'\r\n                required\r\n                defaultValue={\r\n                  user.birthDate !== undefined && user.birthDate !== null\r\n                    ? user.birthDate.substring(0, 10)\r\n                    : new Date()\r\n                }\r\n                className={`${globalClasses.field} ${fieldSubmitted}`}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n              <div className={globalClasses.buttonWrapper}>\r\n                <Button\r\n                  type='Submit'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\r\n                  color='secondary'\r\n                >\r\n                  <Typography>Update</Typography>\r\n                </Button>\r\n                {formikProps.isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={globalClasses.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PersonalInformationForm;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({});\r\n\r\nexport default validationSchema;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Paper, Typography, Button } from '@material-ui/core';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormikField from '../../../utils/FormikField';\r\nimport validationSchema from './Validation';\r\nimport API from '../../../../api/API';\r\n\r\n/* ================ Component ================ */\r\n\r\nconst ProfileSettingsForm = ({ user, globalClasses }) => {\r\n  const [Submitted, setSubmitted] = useState(false);\r\n  const fieldSubmitted = Submitted ? globalClasses.fieldSubmitted : '';\r\n\r\n  return (\r\n    <Paper className={globalClasses.card}>\r\n      <div className={globalClasses.title}>\r\n        <Typography variant='h2'>Profile Settings</Typography>\r\n      </div>\r\n      <div className={globalClasses.formContainer}>\r\n        <Formik\r\n          initialValues={{\r\n            url: user.url,\r\n          }}\r\n          onSubmit={(values, actions) => {\r\n            setSubmitted(false);\r\n            API.editUserInformation({\r\n              url: values.url,\r\n            })\r\n              .then((res) => {\r\n                setSubmitted(true);\r\n                actions.setSubmitting(false);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n                actions.setFieldError('url', err.response.data);\r\n                actions.setSubmitting(false);\r\n              });\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(formikProps) => (\r\n            <form\r\n              className={globalClasses.form}\r\n              onSubmit={formikProps.handleSubmit}\r\n            >\r\n              <FormikField\r\n                label='Custom URL'\r\n                formikProps={formikProps}\r\n                formikKey='url'\r\n                required\r\n                value={user.url}\r\n                className={`${globalClasses.field} ${fieldSubmitted}`}\r\n              />\r\n\r\n              <div className={globalClasses.buttonWrapper}>\r\n                <Button\r\n                  type='Submit'\r\n                  color='secondary'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  disabled={!formikProps.isValid || formikProps.isSubmitting}\r\n                >\r\n                  <Typography>Update</Typography>\r\n                </Button>\r\n                {formikProps.isSubmitting && (\r\n                  <CircularProgress\r\n                    size={24}\r\n                    className={globalClasses.buttonProgress}\r\n                  />\r\n                )}\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ProfileSettingsForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport API from '../../../api/API';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  CircularProgress,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport AccountInformationForm from './AccountInformationForm/AccountInformationForm';\r\nimport PersonalInformationForm from './PersonalInformationForm/PersonalInformationForm';\r\nimport ProfileSettingsForm from './ProfileSettingsForm/ProfileSettingsForm';\r\nimport Tutorial from '../Tutorial/Tutorial';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  //Page container\r\n\r\n  loading: {\r\n    height: '90vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  navSection: {\r\n    position: 'fixed',\r\n    width: '25vw',\r\n    marginTop: '1%',\r\n    zIndex: '100',\r\n  },\r\n  container: {\r\n    maxWidth: '100%',\r\n    overflowX: 'hidden',\r\n  },\r\n  navBar: {\r\n    marginLeft: '0.5em',\r\n    background: theme.palette.primary.main,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  navBarIcon: {\r\n    fontSize: 30,\r\n    color: '#FFFFFF',\r\n  },\r\n  sectionContainer: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    zIndex: '-1',\r\n    marginTop: '1%',\r\n  },\r\n  section: {\r\n    width: '100vw',\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    paddingLeft: '25vw',\r\n    paddingRight: '0.5em',\r\n    flexFlow: 'row wrap',\r\n    alignItems: 'stretch',\r\n    transition: 'all 700ms',\r\n  },\r\n\r\n  card: {\r\n    margin: '0 0 1% 1%',\r\n    width: '100%',\r\n    padding: '5%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    '&::after': {\r\n      content: '\"\"',\r\n      flex: '1 1',\r\n      borderColor: '#D9D7D7',\r\n      borderBottom: '1px solid',\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  formContainer: {\r\n    width: '100%',\r\n    height: '30%',\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  formTitle: {\r\n    width: '25%',\r\n  },\r\n\r\n  field: {\r\n    flexGrow: 1,\r\n    '& .MuiFormLabel-root': {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  fieldSubmitted: {\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: theme.palette.secondary.main,\r\n      },\r\n    },\r\n  },\r\n  buttonWrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  buttonProgress: {\r\n    color: theme.palette.secondary.main,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst AccountPage = () => {\r\n  // Styling\r\n  const classes = useStyles();\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  //Profile Information\r\n  //!! NEED TO MANAGE ERROR MESSAGE AT SOME POINT\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    API.getUserInfo().then(({ data }) => {\r\n      setUser(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  //If profile hasn't been fetched yet\r\n  var pageContent;\r\n  if (isLoading) {\r\n    pageContent = (\r\n      <div className={classes.loading}>\r\n        <CircularProgress />\r\n        <Typography variant='h2'>Fetching User Data</Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    pageContent = (\r\n      <div className={classes.container}>\r\n        <div className={classes.navSection}>\r\n          <Paper className={classes.navBar}>\r\n            <List>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <FaceIcon className={classes.navBarIcon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary='My Information'></ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </Paper>\r\n          <Tutorial />\r\n        </div>\r\n\r\n        <div className={classes.sectionContainer}>\r\n          <div className={classes.section}>\r\n            <AccountInformationForm user={user} globalClasses={classes} />\r\n            <PersonalInformationForm user={user} globalClasses={classes} />\r\n            <ProfileSettingsForm user={user} globalClasses={classes} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return pageContent;\r\n};\r\n\r\nexport default AccountPage;\r\n","import React from 'react';\r\nimport { Switch, useHistory, Redirect, Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\r\nimport { logout } from '../../helpers/auth';\r\nimport PrivateRoute from '../Routes/PrivateRoute';\r\nimport ProfilePage from './ProfilePage/ProfilePage';\r\nimport PublicProfilePage from '../PublicPages/ProfilePage/PublicProfilePage';\r\nimport AccountPage from './AccountPage/AccountPage';\r\nimport Background from '../../assets/Background/bkg-private.svg';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  //Page container\r\n  title: {\r\n    marginLeft: '5%',\r\n    flexGrow: 1,\r\n  },\r\n  banner: theme.mixins.toolbar,\r\n  link: {\r\n    textDecoration: 'none',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  bkgContainer: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: -1,\r\n    position: 'fixed',\r\n    backgroundImage: `url(${Background})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n  },\r\n  contentContainer: {\r\n    zIndex: 10,\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst PrivateLayout = ({ match }) => {\r\n  const history = useHistory();\r\n\r\n  // Styling\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.bkgContainer}>\r\n      <AppBar position='fixed'>\r\n        <Toolbar>\r\n          <Typography variant='h3' className={classes.title}>\r\n            ePortfolio\r\n          </Typography>\r\n          <Link to='/myprofile' className={classes.link}>\r\n            <Typography color='textSecondary'>My Profile</Typography>\r\n          </Link>\r\n          <Link to='/myaccount' className={classes.link}>\r\n            <Typography color='textSecondary'>My Account</Typography>\r\n          </Link>\r\n          <Button\r\n            color='inherit'\r\n            onClick={() => {\r\n              logout(() => history.push('/home/login'));\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.banner}> </div>\r\n\r\n      <div className={classes.contentContainer}>\r\n        <Switch>\r\n          <PrivateRoute exact path='/'>\r\n            <Redirect to='/myprofile' />\r\n          </PrivateRoute>\r\n          <PrivateRoute exact path='/myprofile' component={ProfilePage} />\r\n          <PrivateRoute exact path='/myaccount' component={AccountPage} />\r\n          <PrivateRoute path='/view/:userId' component={PublicProfilePage} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout;\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport PublicProfilePage from './ProfilePage/PublicProfilePage';\r\nimport Background from '../../assets/Background/bkg-private.svg';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  //Page container\r\n  title: {\r\n    marginLeft: '5%',\r\n    flexGrow: 1,\r\n  },\r\n  banner: theme.mixins.toolbar,\r\n  link: {\r\n    textDecoration: 'none',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  bkgContainer: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: -1,\r\n    position: 'fixed',\r\n    backgroundImage: `url(${Background})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n  },\r\n  contentContainer: {\r\n    zIndex: 10,\r\n  },\r\n}));\r\n\r\n/* ================ Component ================ */\r\n\r\nconst PublicLayout = ({ match }) => {\r\n  // Styling\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.bkgContainer}>\r\n      <AppBar position='fixed'>\r\n        <Toolbar>\r\n          <Link to='/home/landing' className={classes.link}>\r\n            <Typography\r\n              variant='h3'\r\n              color='textSecondary'\r\n              className={classes.title}\r\n            >\r\n              ePortfolio\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.banner}> </div>\r\n\r\n      <div className={classes.contentContainer}>\r\n        <Switch>\r\n          <Route path={`/view/:userId`} component={PublicProfilePage} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicLayout;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().label('Email').email().required(),\r\n  password: yup.string().label('Password').required(),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport { authenticate } from '../../../helpers/auth';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport API from '../../../api/API';\r\nimport FormikField from '../../utils/FormikField';\r\nimport validationSchema from './Validation';\r\nimport googleLogo from '../../../assets/Forms/googleLogo.svg';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    rememberMe: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    loginDivider: {\r\n      margin: `${theme.spacing(2)}px 0`,\r\n      backgroundColor: '#FFFFFF',\r\n    },\r\n    signupButton: {\r\n      margin: `${theme.spacing(1)}px 0`,\r\n      color: theme.palette.text.secondary,\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    googleButton: {\r\n      marginTop: `${theme.spacing(1)}px`,\r\n      color: '#FFFFFF',\r\n      backgroundColor: '#4285F4',\r\n      '&:hover': {\r\n        color: '#FFFFFF',\r\n        backgroundColor: '#1A4d94',\r\n      },\r\n    },\r\n    gitHubButton: {\r\n      marginTop: `${theme.spacing(1)}px`,\r\n      color: '#FFFFFF',\r\n      backgroundColor: '#4168b1',\r\n      '&:hover': {\r\n        backgroundColor: '#3c5fa2',\r\n      },\r\n    },\r\n    buttonLogo: {\r\n      width: `${theme.spacing(3)}px`,\r\n      height: `${theme.spacing(3)}px`,\r\n    },\r\n  };\r\n});\r\n\r\n/* ================ Component ================ */\r\n\r\nconst LoginPage = ({ globalClasses }) => {\r\n  const classes = useStyles();\r\n\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n  const sendGoogleToken = (idToken) => {\r\n    API.googleLogin(idToken)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        authenticate(res.data.token);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log('GOOGLE SIGNIN ERROR', err.response);\r\n      });\r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    console.log(response);\r\n    sendGoogleToken(response.tokenId);\r\n  };\r\n\r\n  const sendFacebookToken = (userID, accessToken) => {\r\n    API.facebookLogin(userID, accessToken)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        authenticate(res.data.token);\r\n        setLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log('FACEBOOK SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n\r\n  const responseFacebook = (response) => {\r\n    sendFacebookToken(response.userID, response.accessToken);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={globalClasses.banner}>\r\n        <Typography variant='h1'>Login to your Profile</Typography>\r\n      </div>\r\n      <div className={globalClasses.formContainer}>\r\n        {isLoggedIn && <Redirect to='/' />}\r\n        {!isLoggedIn && (\r\n          <div className={globalClasses.formPaper}>\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                password: '',\r\n              }}\r\n              onSubmit={(values, actions) => {\r\n                // Submit login information\r\n                API.userLogin({\r\n                  email: values.email,\r\n                  password: values.password,\r\n                })\r\n                  .then((result) => {\r\n                    if (result.status === 200) {\r\n                      //Login information matches records\r\n                      authenticate(result.data.token);\r\n                      setLoggedIn(true);\r\n                    }\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                    actions.setErrors({\r\n                      email: err.response.data,\r\n                      password: err.response.data,\r\n                    });\r\n                  });\r\n              }}\r\n              validationSchema={validationSchema}\r\n            >\r\n              {(formikProps) => (\r\n                <form\r\n                  className={globalClasses.form}\r\n                  onSubmit={formikProps.handleSubmit}\r\n                >\r\n                  <FormikField\r\n                    label='Email'\r\n                    formikProps={formikProps}\r\n                    formikKey='email'\r\n                    required\r\n                    className={globalClasses.inputField}\r\n                  />\r\n                  <FormikField\r\n                    label='Password'\r\n                    formikProps={formikProps}\r\n                    formikKey='password'\r\n                    type='password'\r\n                    required\r\n                    className={globalClasses.inputField}\r\n                  />\r\n                  <FormControlLabel\r\n                    className={classes.rememberMe}\r\n                    control={<Checkbox value='remember' color='default' />}\r\n                    label='Remember me'\r\n                  />\r\n\r\n                  <Button\r\n                    type='Submit'\r\n                    fullWidth\r\n                    variant='contained'\r\n                    className={globalClasses.submit}\r\n                    disabled={!formikProps.isValid}\r\n                  >\r\n                    <Typography>Log In</Typography>\r\n                  </Button>\r\n\r\n                  <Divider className={classes.loginDivider} />\r\n                  <Link href='./signup' underline='none'>\r\n                    <Button\r\n                      fullWidth\r\n                      variant='contained'\r\n                      className={globalClasses.submit}\r\n                    >\r\n                      Signup for a Portfolio\r\n                    </Button>\r\n                  </Link>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                      <GoogleLogin\r\n                        clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        render={(renderProps) => (\r\n                          <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            className={classes.googleButton}\r\n                            startIcon={\r\n                              <img\r\n                                alt='google-logo'\r\n                                src={googleLogo}\r\n                                className={classes.buttonLogo}\r\n                              />\r\n                            }\r\n                            onClick={renderProps.onClick}\r\n                            disabled={renderProps.disabled}\r\n                          >\r\n                            Sign in with Google\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <FacebookLogin\r\n                        appId={`${process.env.REACT_APP_FACEBOOK_CLIENT}`}\r\n                        autoLoad={false}\r\n                        callback={responseFacebook}\r\n                        render={(renderProps) => (\r\n                          <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            className={classes.gitHubButton}\r\n                            startIcon={\r\n                              <FacebookIcon className={classes.buttonLogo} />\r\n                            }\r\n                            onClick={renderProps.onClick}\r\n                          >\r\n                            Sign in with Facebook\r\n                          </Button>\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().label(\"Email\").email().required(),\r\n  password: yup\r\n    .string()\r\n    .label(\"Password\")\r\n    .required()\r\n    .min(5, \"Password should be a minimum of 5 characters\")\r\n    .matches(\r\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required()\r\n    .label(\"Confirm password\")\r\n    .test(\"passwords-match\", \"Passwords do not match\", function (value) {\r\n      return this.parent.password === value;\r\n    }),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { Typography, Avatar, Grid, Link, Button } from \"@material-ui/core\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\nimport FormikField from \"../../utils/FormikField\";\r\nimport validationSchema from \"./Validation\";\r\nimport API from \"../../../api/API\";\r\n\r\n/* ================ Component ================ */\r\n\r\nconst ResetPage = ({ globalClasses }) => {\r\n  const classes = globalClasses;\r\n\r\n  const [Submitted, setSubmitted] = useState(false);\r\n\r\n  if (Submitted) {\r\n    return (\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.successBoard}>\r\n          <Avatar className={classes.avatar}>\r\n            <ThumbUpIcon className={classes.icon} />\r\n          </Avatar>\r\n          <Typography variant=\"h2\">Congratulations!</Typography>\r\n          <Typography>\r\n            You now have an academic ePorfolio, login and start editing!\r\n          </Typography>\r\n          <Button\r\n            type=\"Submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.landingButton}\r\n          >\r\n            <Link href=\"./login\" variant=\"body2\" color=\"inherit\">\r\n              Click here to login\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={globalClasses.banner}>\r\n        <Typography variant=\"h1\" color=\"textSecondary\">\r\n          Reset your new Portfolio\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.formPaper}>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n            }}\r\n            onSubmit={(values, actions) => {\r\n              API.userSignup({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n              })\r\n                .then((res) => {\r\n                  setSubmitted(true);\r\n                })\r\n                .catch((err) => {\r\n                  actions.setFieldError(\"email\", err.response.data);\r\n                  actions.setSubmitting(false);\r\n                });\r\n            }}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(formikProps) => (\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={formikProps.handleSubmit}\r\n              >\r\n                <FormikField\r\n                  label=\"Email\"\r\n                  formikProps={formikProps}\r\n                  formikKey=\"email\"\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n                <FormikField\r\n                  label=\"Password\"\r\n                  formikProps={formikProps}\r\n                  formikKey=\"password\"\r\n                  type=\"password\"\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n                <FormikField\r\n                  label=\"Confirm Password\"\r\n                  formikProps={formikProps}\r\n                  formikKey=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n\r\n                <Button\r\n                  type=\"Submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  className={classes.submit}\r\n                  disabled={!formikProps.isValid}\r\n                  color=\"primary\"\r\n                >\r\n                  <Typography>Reset</Typography>\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link href=\"./login\" variant=\"body2\" color=\"textSecondary\">\r\n                      Log In\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetPage;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required()\r\n    .label('First Name')\r\n    .test('length', 'First Name must have more than 1 character', (value) => {\r\n      return value && value.length > 2;\r\n    })\r\n    .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n      return /^[A-Za-z]+$/.test(value);\r\n    }),\r\n  lastName: yup\r\n    .string()\r\n    .required()\r\n    .label('Last Name')\r\n    .test('length', 'Last Name must have more than 1 character', (value) => {\r\n      return value && value.length > 2;\r\n    })\r\n    .test('alphabets', 'Name must only contain alphabets', (value) => {\r\n      return /^[A-Za-z]+$/.test(value);\r\n    }),\r\n  email: yup.string().label('Email').email().required(),\r\n  password: yup\r\n    .string()\r\n    .label('Password')\r\n    .required()\r\n    .min(5, 'Password should be a minimum of 5 characters')\r\n    .matches(\r\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n      'Password must contain at least 8 characters, one uppercase, one number and one special case character'\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required()\r\n    .label('Confirm password')\r\n    .test('passwords-match', 'Passwords do not match', function (value) {\r\n      return this.parent.password === value;\r\n    }),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Typography, Avatar, Grid, Link, Button } from '@material-ui/core';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport FormikField from '../../utils/FormikField';\r\nimport validationSchema from './Validation';\r\nimport API from '../../../api/API';\r\n\r\n/* ================ Component ================ */\r\n\r\nconst SignUpPage = ({ globalClasses }) => {\r\n  const classes = globalClasses;\r\n\r\n  const [Submitted, setSubmitted] = useState(false);\r\n\r\n  if (Submitted) {\r\n    return (\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.successBoard}>\r\n          <Avatar className={classes.avatar}>\r\n            <ThumbUpIcon className={classes.icon} />\r\n          </Avatar>\r\n          <Typography variant='h2'>Congratulations!</Typography>\r\n          <Typography>\r\n            You now have an academic ePorfolio, login and start editing!\r\n          </Typography>\r\n          <Button\r\n            type='Submit'\r\n            fullWidth\r\n            variant='contained'\r\n            className={classes.landingButton}\r\n          >\r\n            <Link href='./login' variant='body2' color='inherit'>\r\n              Click here to login\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={globalClasses.banner}>\r\n        <Typography variant='h1' color='textSecondary'>\r\n          Create your new Portfolio\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.formPaper}>\r\n          <Formik\r\n            initialValues={{\r\n              firstName: '',\r\n              lastName: '',\r\n              email: '',\r\n              password: '',\r\n              confirmPassword: '',\r\n            }}\r\n            onSubmit={(values, actions) => {\r\n              API.userSignup({\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                email: values.email,\r\n                password: values.password,\r\n              })\r\n                .then((res) => {\r\n                  setSubmitted(true);\r\n                })\r\n                .catch((err) => {\r\n                  actions.setFieldError('email', err.response.data);\r\n                  actions.setSubmitting(false);\r\n                });\r\n            }}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(formikProps) => (\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={formikProps.handleSubmit}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikField\r\n                      label='FirstName'\r\n                      formikProps={formikProps}\r\n                      formikKey='firstName'\r\n                      required\r\n                      className={classes.inputField}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <FormikField\r\n                      label='LastName'\r\n                      formikProps={formikProps}\r\n                      formikKey='lastName'\r\n                      required\r\n                      className={classes.inputField}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <FormikField\r\n                  label='Email'\r\n                  formikProps={formikProps}\r\n                  formikKey='email'\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n                <FormikField\r\n                  label='Password'\r\n                  formikProps={formikProps}\r\n                  formikKey='password'\r\n                  type='password'\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n                <FormikField\r\n                  label='Confirm Password'\r\n                  formikProps={formikProps}\r\n                  formikKey='confirmPassword'\r\n                  type='password'\r\n                  required\r\n                  className={classes.inputField}\r\n                />\r\n\r\n                <Button\r\n                  type='Submit'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  className={classes.submit}\r\n                  disabled={!formikProps.isValid}\r\n                  color='primary'\r\n                >\r\n                  <Typography>Sign Up</Typography>\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link href='./login' variant='body2' color='textSecondary'>\r\n                      Log In\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react';\r\nimport { Button, Link, Typography } from '@material-ui/core';\r\n\r\n/* ================ Component ================ */\r\n\r\nconst LandingPage = ({ globalClasses }) => {\r\n  // const [isLoggedIn, setLoggedIn] = useState(false);\r\n  // const { setAuthTokens } = useAuth();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={globalClasses.banner}>\r\n        <Typography variant='h1' color='textSecondary'>\r\n          Welcome to ePortfolio\r\n        </Typography>\r\n      </div>\r\n      <div className={globalClasses.landingButtonContainer}>\r\n        <Link href='./login' underline='none'>\r\n          <Button\r\n            type='Submit'\r\n            variant='contained'\r\n            className={globalClasses.landingButton}\r\n            color='primary'\r\n          >\r\n            <Typography>Get Started With Your portfolio</Typography>\r\n          </Button>\r\n        </Link>\r\n        <Link href='./search' underline='none'>\r\n          <Button\r\n            type='Submit'\r\n            variant='contained'\r\n            className={globalClasses.landingButton}\r\n            color='primary'\r\n          >\r\n            <Typography>Search for a Portfolio</Typography>\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, Avatar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchCard: {\r\n    width: '100%',\r\n    background: theme.palette.neutral.main,\r\n    color: theme.palette.tertiary.main,\r\n    marginTop: theme.spacing(2),\r\n    padding: '5%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  profilePicture: {\r\n    height: '2.5em',\r\n    width: '2.5em',\r\n    cursor: 'pointer',\r\n  },\r\n  bio: {\r\n    marginLeft: '5%',\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n/* ================ Component ================ */\r\n\r\nconst SearchCard = ({ user }) => {\r\n  const classes = useStyles();\r\n  //   const [records, setRecords] = useState(user);\r\n\r\n  return (\r\n    <Paper className={classes.searchCard}>\r\n      <Avatar className={classes.profilePicture} />\r\n\r\n      <div className={classes.bio}>\r\n        <Typography variant='h3'>Test Search Profile</Typography>\r\n        <Typography>The Users bio will go here</Typography>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SearchCard from './SearchCard';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    searchContainer: {\r\n      height: '50vh',\r\n    },\r\n    searchBar: {\r\n      width: '40%',\r\n      marginLeft: theme.spacing(3),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n\r\n    iconButton: {\r\n      color: '#FFFFFF',\r\n    },\r\n    searchResults: {\r\n      marginLeft: theme.spacing(3),\r\n\r\n      width: '50vw',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  };\r\n});\r\n/* ================ Component ================ */\r\n\r\nconst SearchPage = ({ globalClasses }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.searchContainer}>\r\n      <div className={globalClasses.banner}>\r\n        <Typography variant='h1' color='textSecondary'>\r\n          Search for Someone\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.searchBar}>\r\n        <TextField\r\n          className={globalClasses.inputField}\r\n          variant='outlined'\r\n          margin='dense'\r\n          fullWidth\r\n          label='Search for someone'\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <IconButton\r\n                  type='submit'\r\n                  className={classes.iconButton}\r\n                  aria-label='search'\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.searchResults}>\r\n        <SearchCard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Background from '../../assets/Background/bkg-alt.jpg';\r\nimport LoginPage from './LoginPage/LoginPage';\r\nimport ResetPage from './ResetPage/ResetPage';\r\nimport SignupPage from './SignUpPage/SignUpPage';\r\nimport LandingPage from './LandingPage/LandingPage';\r\nimport SearchPage from './SearchPage/SearchPage';\r\nimport { Fade } from '@material-ui/core';\r\n\r\n/* ================ Styling ================ */\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    //Page container\r\n    root: {\r\n      height: '100vh',\r\n      width: '100vw',\r\n      position: 'fixed',\r\n      backgroundImage: `url(${Background})`,\r\n      backgroundSize: 'cover',\r\n\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignContent: 'center',\r\n      justifyContent: 'center',\r\n      paddingLeft: theme.spacing(5),\r\n    },\r\n    banner: {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    contentContainer: {},\r\n    formContainer: {\r\n      paddingLeft: theme.spacing(3),\r\n    },\r\n    formPaper: {\r\n      width: '40%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '2em',\r\n    },\r\n    avatar: { height: '70px', width: '70px', background: '#FFFFFF' },\r\n    icon: { fontSize: 40, color: theme.palette.primary.main },\r\n    inputField: {\r\n      '& .MuiInputBase-input': {\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused': {\r\n        color: theme.palette.text.secondary,\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: '#FFFFFF',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: '#FFFFFF',\r\n        },\r\n      },\r\n    },\r\n    submit: {\r\n      color: theme.palette.text.secondary,\r\n      backgroundColor: theme.palette.secondary.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        borderColor: theme.palette.secondary.light,\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n\r\n    landingButtonContainer: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      width: '40vw',\r\n      justifyContent: 'space-around',\r\n    },\r\n    landingButton: {\r\n      marginRight: theme.spacing(2) + 'px',\r\n      color: theme.palette.text.secondary,\r\n      backgroundColor: theme.palette.secondary.main,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        borderColor: theme.palette.secondary.light,\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n    successBoard: {\r\n      color: theme.palette.text.secondary,\r\n      width: '25%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      padding: '2%',\r\n      '& >*': { margin: '1em' },\r\n    },\r\n  };\r\n});\r\n\r\n/* ================ Component ================ */\r\n\r\nconst HomeLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Fade>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/home/landing'\r\n            render={(props) => (\r\n              <LandingPage {...props} globalClasses={classes} />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path='/home/login'\r\n            render={(props) => <LoginPage {...props} globalClasses={classes} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path='/home/signup'\r\n            render={(props) => (\r\n              <SignupPage {...props} globalClasses={classes} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path='/home/reset'\r\n            render={(props) => <ResetPage {...props} globalClasses={classes} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path='/home/search'\r\n            render={(props) => (\r\n              <SearchPage {...props} globalClasses={classes} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeLayout;\r\n","import React from 'react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from './theme';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport PrivateRoute from './Routes/PrivateRoute';\r\nimport { isAuth } from '../helpers/auth';\r\n\r\nimport PrivateLayout from './PrivatePages/PrivateLayout';\r\nimport PublicLayout from './PublicPages/PublicLayout';\r\nimport HomeLayout from './PublicPages/HomeLayout';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/home' component={HomeLayout} />\r\n              {!isAuth() && <Route path='/view' component={PublicLayout} />}\r\n              <PrivateRoute path='/' component={PrivateLayout} />\r\n            </Switch>\r\n          </Router>\r\n        </CssBaseline>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}